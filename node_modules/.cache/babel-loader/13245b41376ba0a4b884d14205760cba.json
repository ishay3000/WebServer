{"ast":null,"code":"import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar GuardedRoute = function GuardedRoute(_ref) {\n  var Component = _ref.component,\n      validatorFunction = _ref.validatorFunction,\n      redirectTo = _ref.redirectTo,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"component\", \"validatorFunction\", \"redirectTo\"]);\n\n  return /*#__PURE__*/React.createElement(Route, _extends({}, rest, {\n    render: function render(props) {\n      if (validatorFunction) {\n        return /*#__PURE__*/React.createElement(Component, props);\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: redirectTo ? redirectTo : '/',\n            state: {\n              from: props.location\n            }\n          }\n        });\n      }\n    }\n  }));\n};\n\nexport default GuardedRoute;","map":{"version":3,"sources":["../src/index.js"],"names":["GuardedRoute","component","Component","validatorFunction","redirectTo","rest","pathname","state","from","props","location"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAA+F;AAAA,MAAlFE,SAAkF,GAAA,IAAA,CAA7FD,SAA6F;AAAA,MAArDE,iBAAqD,GAAA,IAAA,CAAvEA,iBAAuE;AAAA,MAAvBC,UAAuB,GAAA,IAAA,CAAlCA,UAAkC;AAAA,MAATC,IAAS,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,mBAAA,EAAA,YAAA,CAAA,CAAA;;AAChH,SAAA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AACA,IAAA,MAAM,EACF,SAAA,MAAA,CAAA,KAAA,EAAQ;AACJ,UAAA,iBAAA,EAAqB;AACjB,eAAA,aAAO,KAAA,CAAA,aAAA,CAAA,SAAA,EAAP,KAAO,CAAP;AADJ,OAAA,MAGI;AACA,eAAA,aAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,UAAA,EAAE,EAAE;AACjBC,YAAAA,QAAQ,EAACF,UAAU,GAAA,UAAA,GADF,GAAA;AAEjBG,YAAAA,KAAK,EAAC;AACFC,cAAAA,IAAI,EAAEC,KAAK,CAACC;AADV;AAFW;AAAd,SAAA,CAAP;AAMH;AAEJ;AAfL,GAAA,CAAA,CADJ;AADJ,CAAA","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nconst GuardedRoute = ({component: Component, validatorFunction:validatorFunction, redirectTo:redirectTo,...rest}) =>{\r\n    return (\r\n        <Route {...rest} \r\n        render={\r\n            props =>{\r\n                if(validatorFunction){\r\n                    return <Component {...props} />;\r\n                }\r\n                else{\r\n                    return <Redirect to={{\r\n                        pathname:redirectTo?redirectTo:'/',\r\n                        state:{\r\n                            from: props.location\r\n                        }\r\n                    }}/>\r\n                }\r\n                \r\n            }\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nexport default GuardedRoute;"]},"metadata":{},"sourceType":"module"}