{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Modal.js\";\nimport React, { Component } from 'react';\nimport './modal.css';\nimport { Modal, Button } from \"react-bootstrap\";\n\nclass MyModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.state = {\n      SessionName: '',\n      SyncDirectory: {},\n      Bandwidth: '',\n      modification: '',\n      errors: {},\n      show: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      SessionName: nextProps.SessionName,\n      SyncDirectory: {\n        'Path': nextProps.SyncDirectory.Path\n      },\n      Bandwidth: {\n        'Rate': nextProps.Bandwidth.Rate\n      },\n      modification: nextProps.Modification,\n      show: true\n    }); //this.handleShow()\n  }\n\n  stateHandler(stateName, e) {\n    this.setState({\n      [stateName]: e.target.value\n    });\n  }\n\n  innerStateHandler(stateName, innerStateName, e) {\n    this.setState({\n      [stateName]: {\n        [innerStateName]: e.target.value\n      }\n    });\n  }\n\n  handleValidation() {\n    const item = this.state;\n    const errors = [];\n    let formIsValid = true; //validate name\n\n    if (!item.SessionName) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (typeof item.SessionName !== \"undefined\") {\n      if (!item.SessionName.match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Only letters\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  handleSave() {\n    if (!this.handleValidation()) {\n      console.log(\"Validation error\");\n      return;\n    }\n\n    const item = this.state;\n    console.log(this.state.modification);\n    this.state.show = false;\n    this.props.saveModalDetails(item, this.state.modification);\n    console.log(this.state.show);\n    this.handleClose();\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  render() {\n    console.log(this.state.show);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      id: \"exampleModal\",\n      show: this.state.show,\n      onHide: this.handleClose,\n      keyboard: false,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleSubmit,\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fullName\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fullName\",\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"fullName\",\n                  onChange: this.handleChange,\n                  noValidate: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 15\n                }, this), errors.fullName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: errors.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  onChange: this.handleChange,\n                  noValidate: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 15\n                }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  onChange: this.handleChange,\n                  noValidate: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 15\n                }, this), errors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Password must be eight characters in length.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }, this)\n        /* <div className=\"content\">\n            <span className=\"modal-lable\">Session Name:</span>\n            <input value={this.state.SessionName} type=\"text\" onChange={(e) => this.stateHandler('SessionName', e)} />\n        </div>\n        <div className=\"content\">\n            <span className=\"modal-lable\">Sync Directory:</span>\n            <input value={this.state.SyncDirectory.Path} type=\"text\" onChange={(e) => this.innerStateHandler('SyncDirectory', 'Path', e)} />\n        </div>\n        <div className=\"content\">\n            <span className=\"modal-lable\">Bandwidth:</span>\n            <input value={this.state.Bandwidth.Rate} type=\"text\" onChange={(e) => this.innerStateHandler('Bandwidth', 'Rate', e)} />\n        </div> */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: this.handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleSave,\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default MyModal;","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Modal.js"],"names":["React","Component","Modal","Button","MyModal","constructor","props","handleSave","bind","handleClose","handleShow","state","SessionName","SyncDirectory","Bandwidth","modification","errors","show","componentWillReceiveProps","nextProps","setState","Path","Rate","Modification","stateHandler","stateName","e","target","value","innerStateHandler","innerStateName","handleValidation","item","formIsValid","match","console","log","saveModalDetails","render","handleSubmit","handleChange","fullName","length","email","password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './modal.css'\nimport { Modal, Button } from \"react-bootstrap\";\n\n\nclass MyModal extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n\n        this.state = {\n            SessionName: '',\n            SyncDirectory: {},\n            Bandwidth: '',\n            modification: '',\n            errors: {},\n            show: false\n        }\n    }\n\n\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            SessionName: nextProps.SessionName,\n            SyncDirectory: { 'Path': nextProps.SyncDirectory.Path },\n            Bandwidth: { 'Rate': nextProps.Bandwidth.Rate },\n            modification: nextProps.Modification,\n            show: true\n        });\n        //this.handleShow()\n    }\n    stateHandler(stateName, e) {\n        this.setState({ [stateName]: e.target.value })\n    }\n\n    innerStateHandler(stateName, innerStateName, e) {\n        this.setState({ [stateName]: { [innerStateName]: e.target.value } })\n    }\n    handleValidation() {\n        const item = this.state;\n        const errors = [];\n        let formIsValid = true;\n        //validate name\n        if (!item.SessionName) {\n            formIsValid = false;\n            errors[\"name\"] = \"Cannot be empty\";\n        }\n\n        if (typeof item.SessionName !== \"undefined\") {\n            if (!item.SessionName.match(/^[a-zA-Z]+$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"Only letters\";\n            }\n        }\n        this.setState({ errors: errors });\n        return formIsValid\n    }\n    handleSave() {\n        if (!this.handleValidation()) {\n            console.log(\"Validation error\")\n            return;\n        }\n        const item = this.state;\n        console.log(this.state.modification);\n        this.state.show = false;\n        this.props.saveModalDetails(item, this.state.modification)\n        console.log(this.state.show);\n        this.handleClose();\n    }\n\n    handleClose() {\n        this.setState({ show: false })\n\n    }\n    handleShow() {\n        this.setState({ show: true })\n\n    }\n\n    render() {\n        console.log(this.state.show);\n        return (\n                <Modal\n                    id=\"exampleModal\"\n                    show={this.state.show}\n                    onHide={this.handleClose}\n                    keyboard={false}\n                    size=\"lg\"\n                >   \n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal title</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {\n                              <div className='wrapper'>\n        <div className='form-wrapper'>\n          <h2>Create Account</h2>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className='fullName'>\n              <label htmlFor=\"fullName\">Full Name</label>\n              <input type='text' name='fullName' onChange={this.handleChange} noValidate />\n              {errors.fullName.length > 0 && \n                <span className='error'>{errors.fullName}</span>}\n            </div>\n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input type='email' name='email' onChange={this.handleChange} noValidate />\n              {errors.email.length > 0 && \n                <span className='error'>{errors.email}</span>}\n            </div>\n            <div className='password'>\n              <label htmlFor=\"password\">Password</label>\n              <input type='password' name='password' onChange={this.handleChange} noValidate />\n              {errors.password.length > 0 && \n                <span className='error'>{errors.password}</span>}\n            </div>\n            <div className='info'>\n              <small>Password must be eight characters in length.</small>\n            </div>\n            <div className='submit'>\n              <button>Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n                        \n                        \n                        /* <div className=\"content\">\n                            <span className=\"modal-lable\">Session Name:</span>\n                            <input value={this.state.SessionName} type=\"text\" onChange={(e) => this.stateHandler('SessionName', e)} />\n                        </div>\n                        <div className=\"content\">\n                            <span className=\"modal-lable\">Sync Directory:</span>\n                            <input value={this.state.SyncDirectory.Path} type=\"text\" onChange={(e) => this.innerStateHandler('SyncDirectory', 'Path', e)} />\n                        </div>\n                        <div className=\"content\">\n                            <span className=\"modal-lable\">Bandwidth:</span>\n                            <input value={this.state.Bandwidth.Rate} type=\"text\" onChange={(e) => this.innerStateHandler('Bandwidth', 'Rate', e)} />\n                        </div> */}\n                    </Modal.Body>\n                    {\n\n                        <div className=\"modal-footer\">\n                            \n                            <Button variant=\"secondary\" \n                            onClick={this.handleClose}>\n                                Close\n                            </Button>\n                            \n                            <Button variant=\"primary\"\n                            onClick={this.handleSave}>\n                                Save changes\n                                </Button>\n                        </div>\n                    }\n                </Modal>\n        );\n    }\n\n}\n\nexport default MyModal;"]},"metadata":{},"sourceType":"module"}