{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\nimport Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      var brochure = [];\n      this.setState({\n        sessions\n      });\n      var index = 0; // this.state.sessions.map(session => {\n      //   var currentSession = Object.values(session)[0]\n      //   brochure[index] = {\n      //     SessionName: currentSession.Name,\n      //     SessionType: currentSession.Type,\n      //     Bandwidth: { Rate: currentSession.Bandwidth.Rate },\n      //     SyncDirectory: { Path: currentSession.SyncDirectory.Path }\n      //   }\n      //   ++index\n      //   this.setState({ brochure });\n      // })\n    });\n  }\n\n  replaceModalItem(index, modification) {// console.log(this.state.modification);\n    // this.setState({\n    //   requiredItem: index,\n    //   modification: modification\n    // });\n    // console.log(this.state.modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {// let tmpChangedSessions = this.state.changedSessions;\n    // tmpChangedSessions.push({\n    //   modification: modification,\n    //   session: session,\n    //   sessionNameChangedProps: sessionNameChangedProps\n    // })\n    // this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item, modification) {// const requiredItem = this.state.requiredItem;\n    // let tempbrochure = this.state.brochure;\n    // let currentName = tempbrochure[requiredItem].SessionName;\n    // item.SessionType = tempbrochure[requiredItem].SessionType;\n    // const sessionNameChanged = {\n    //   'sessionNameChanged':\n    //     (currentName !== item.SessionName), 'oldName': currentName\n    //}\n    // tempbrochure[requiredItem] = item;\n    // this.storeChangedSession(item, modification, sessionNameChanged);\n    // this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {// let tempBrochure = this.state.brochure;\n    // let tmpSessionName = tempBrochure[index].SessionName;\n    // tempBrochure.splice(index, 1);\n    // this.storeChangedSession(tmpSessionName, 'deleted')\n    // this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {// console.log('Saving changes to filesystem...')\n    // axios.post('https://localhost:1337/sessions', {\n    //   data: JSON.stringify(this.state.changedSessions)\n    // }).then(res => {\n    //   console.log(res);\n    // })\n    // this.state.changedSessions = []\n  }\n\n  addSession() {// this.state.brochure.push({\n    //   SessionName: '',\n    //   SessionType: '',\n    //   Bandwidth: { Rate: '' },\n    //   SyncDirectory: { Path: '' }\n    // });\n    // this.state.requiredItem = this.state.brochure.length;\n    // this.replaceModalItem(this.state.requiredItem - 1, 'added');\n  }\n\n  render() {\n    //console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return 'hello' // <tr key={index}>\n      //   <td>{item.SessionName}</td>\n      //   <td>{item.SessionType}</td>\n      //   <td>{item.SyncDirectory.Path}</td>\n      //   <td>\n      //     <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n      //       onClick={() => this.replaceModalItem(index, 'modified')}>edit</button> {\" \"}\n      //     <button className=\"btn btn-danger\" onClick={() => {\n      //       this.deleteItem(index)\n      //     }\n      //     }>remove</button>\n      //   </td>\n      // </tr>\n      ;\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sessions configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => this.saveChangesToFile(),\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModal\",\n          onClick: () => {\n            this.addSession();\n          },\n          children: \"Add new session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), tmpModal ? /*#__PURE__*/_jsxDEV(Modal, {\n        SessionName: '',\n        SessionType: '',\n        SyncDirectory: '',\n        Bandwidth: '',\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this) : modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n        SessionName: modalData.SessionName,\n        SessionType: modalData.SessionType,\n        SyncDirectory: modalData.SyncDirectory,\n        Bandwidth: modalData.Bandwidth,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Home","Component","constructor","props","replaceModalItem","bind","saveModalDetails","saveChangesToFile","state","requiredItem","brochure","changedSessions","modification","componentDidMount","get","then","res","sessions","data","Sessions","setState","index","storeChangedSession","session","sessionNameChangedProps","item","deleteItem","addSession","render","map","modalData","tmpModal","textAlign","SessionName","SessionType","SyncDirectory","Bandwidth"],"mappings":"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","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this)\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: ''\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        var brochure = []\n        this.setState({ sessions });\n        var index = 0\n        // this.state.sessions.map(session => {\n        //   var currentSession = Object.values(session)[0]\n        //   brochure[index] = {\n        //     SessionName: currentSession.Name,\n        //     SessionType: currentSession.Type,\n        //     Bandwidth: { Rate: currentSession.Bandwidth.Rate },\n        //     SyncDirectory: { Path: currentSession.SyncDirectory.Path }\n        //   }\n        //   ++index\n        //   this.setState({ brochure });\n        // })\n      })\n  }\n\n  replaceModalItem(index, modification) {\n    // console.log(this.state.modification);\n    // this.setState({\n    //   requiredItem: index,\n    //   modification: modification\n    // });\n    // console.log(this.state.modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {\n    // let tmpChangedSessions = this.state.changedSessions;\n    // tmpChangedSessions.push({\n    //   modification: modification,\n    //   session: session,\n    //   sessionNameChangedProps: sessionNameChangedProps\n    // })\n    // this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item, modification) {\n    // const requiredItem = this.state.requiredItem;\n    // let tempbrochure = this.state.brochure;\n    // let currentName = tempbrochure[requiredItem].SessionName;\n    // item.SessionType = tempbrochure[requiredItem].SessionType;\n    // const sessionNameChanged = {\n    //   'sessionNameChanged':\n    //     (currentName !== item.SessionName), 'oldName': currentName\n    //}\n\n    // tempbrochure[requiredItem] = item;\n\n    // this.storeChangedSession(item, modification, sessionNameChanged);\n    // this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    // let tempBrochure = this.state.brochure;\n    // let tmpSessionName = tempBrochure[index].SessionName;\n    // tempBrochure.splice(index, 1);\n\n    // this.storeChangedSession(tmpSessionName, 'deleted')\n    // this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    // console.log('Saving changes to filesystem...')\n\n    // axios.post('https://localhost:1337/sessions', {\n    //   data: JSON.stringify(this.state.changedSessions)\n    // }).then(res => {\n    //   console.log(res);\n    // })\n\n    // this.state.changedSessions = []\n  }\n\n  addSession() {\n    // this.state.brochure.push({\n    //   SessionName: '',\n    //   SessionType: '',\n    //   Bandwidth: { Rate: '' },\n    //   SyncDirectory: { Path: '' }\n    // });\n    // this.state.requiredItem = this.state.brochure.length;\n    // this.replaceModalItem(this.state.requiredItem - 1, 'added');\n  }\n\n\n  render() {\n    //console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        'hello'\n        // <tr key={index}>\n        //   <td>{item.SessionName}</td>\n        //   <td>{item.SessionType}</td>\n        //   <td>{item.SyncDirectory.Path}</td>\n        //   <td>\n        //     <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n        //       onClick={() => this.replaceModalItem(index, 'modified')}>edit</button> {\" \"}\n        //     <button className=\"btn btn-danger\" onClick={() => {\n        //       this.deleteItem(index)\n        //     }\n        //     }>remove</button>\n        //   </td>\n        // </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Sessions configuration</h1>\n          <button className=\"btn btn-warning\"\n            onClick={() => this.saveChangesToFile()\n            }>Save changes</button> {\" \"}\n          <button className='btn btn-info' data-toggle=\"modal\" data-target=\"#exampleModal\"\n            onClick={() => {\n              this.addSession()\n            }}>Add new session</button> {\" \"}\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n\n        {tmpModal ? <Modal\n          SessionName={''}\n          SessionType={''}\n          SyncDirectory={''}\n          Bandwidth={''}\n          saveModalDetails={this.saveModalDetails}\n        />\n          :\n          (modalData ? <Modal\n            SessionName={modalData.SessionName}\n            SessionType={modalData.SessionType}\n            SyncDirectory={modalData.SyncDirectory}\n            Bandwidth={modalData.Bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          /> : null)}\n\n        {/* { modalData ?\n          <Modal\n            SessionName={modalData.SessionName}\n            SessionType={modalData.SessionType}\n            SyncDirectory={modalData.SyncDirectory}\n            Bandwidth={modalData.Bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          />\n          :\n          null} */}\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}