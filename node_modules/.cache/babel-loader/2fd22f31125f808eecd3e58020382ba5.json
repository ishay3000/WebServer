{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/list.js\";\n// import React, { Component } from 'react';\n// import Modal from './Modal.js';\n// class List extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.replaceModalItem = this.replaceModalItem.bind(this);\n//         this.saveModalDetails = this.saveModalDetails.bind(this);\n//         this.state = {\n//             requiredItem: 0,\n//             brochure: [\n//                 {\n//                     sessionName: 'Lior Tembel',\n//                     sessionType: 'RX',\n//                     syncDirectory: '/home/Kappa',\n//                     syslogIP: '0.0.0.0',\n//                     snmpIP: '0.0.0.0'\n//                 }, {\n//                     sessionName: 'Lior Tembel',\n//                     sessionType: 'RX',\n//                     syncDirectory: '/home/Kappa',\n//                     syslogIP: '0.0.0.0',\n//                     snmpIP: '0.0.0.0'\n//                 }, {\n//                     sessionName: 'Lior Tembel',\n//                     sessionType: 'RX',\n//                     syncDirectory: '/home/Kappa',\n//                     syslogIP: '0.0.0.0',\n//                     snmpIP: '0.0.0.0'\n//                 },\n//             ]\n//         }\n//     }\n//     replaceModalItem(index) {\n//         this.setState({\n//             requiredItem: index\n//         });\n//     }\n//     saveModalDetails(item) {\n//         const requiredItem = this.state.requiredItem;\n//         let tempbrochure = this.state.brochure;\n//         tempbrochure[requiredItem] = item;\n//         this.setState({ brochure: tempbrochure });\n//     }\n//     deleteItem(index) {\n//         let tempBrochure = this.state.brochure;\n//         tempBrochure.splice(index, 1);\n//         this.setState({ brochure: tempBrochure });\n//     }\n//     render() {\n//         const brochure = this.state.brochure.map((item, index) => {\n//             return (\n//                 <tr key={index}>\n//                     <td>{item.sessionName}</td>\n//                     <td>{item.sessionType}</td>\n//                     <td>{item.syncDirectory}</td>\n//                     <td>\n//                         <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n//                             onClick={() => {\n//                                 this.replaceModalItem(index)\n//                                 console.log(this.state.requiredItem)\n//                             }\n//                             }>edit</button> {\" \"}\n//                         <button className=\"btn btn-danger\" onClick={() => this.deleteItem(index)}>remove</button>\n//                     </td>\n//                 </tr>\n//             )\n//         });\n//         const requiredItem = this.state.requiredItem;\n//         let modalData = this.state.brochure[requiredItem];\n//         return (\n//             <div>\n//                 <div style={{ textAlign: \"center\" }}>\n//                     <h1>Pillar of Salt Configuration</h1>\n//                 </div>\n//                 <table className=\"table table-striped\">\n//                     <thead>\n//                         <tr>\n//                             <th scope=\"col\">Session Name</th>\n//                             <th scope=\"col\">Session Type</th>\n//                             <th scope=\"col\">Sync Directory</th>\n//                             <th scope=\"col\">Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {brochure}\n//                     </tbody>\n//                 </table>\n//                 <Modal\n//                     sessionName={modalData.sessionName}\n//                     sessionType={modalData.sessionType}\n//                     syncDirectory={modalData.syncDirectory}\n//                     snmpIP={modalData.snmpIP}\n//                     syslogIP={modalData.syslogIP}\n//                     saveModalDetails={this.saveModalDetails}\n//                 />\n//             </div>\n//         );\n//     }\n// }\n// export default List;\nimport React, { Component } from 'react';\nimport Modal from './modal.js';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [{\n        sessionName: 'Lior Tembel',\n        sessionType: 'RX',\n        syncDirectory: '/home/Kappa',\n        syslogIP: '0.0.0.0',\n        snmpIP: '0.0.0.0'\n      }, {\n        sessionName: 'Lior Tembel',\n        sessionType: 'RX',\n        syncDirectory: '/home/Kappa',\n        syslogIP: '0.0.0.0',\n        snmpIP: '0.0.0.0'\n      }, {\n        sessionName: 'Lior Tembel',\n        sessionType: 'RX',\n        syncDirectory: '/home/Kappa',\n        syslogIP: '0.0.0.0',\n        snmpIP: '0.0.0.0'\n      }]\n    };\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.syncDirectory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.replaceModalItem(index),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => this.deleteItem(index),\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this);\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pillar of Salt Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        sessionName: modalData.sessionName,\n        sessionType: modalData.sessionType,\n        syncDirectory: modalData.syncDirectory,\n        snmpIP: modalData.snmpIP,\n        syslogIP: modalData.syslogIP,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/list.js"],"names":["React","Component","Modal","List","constructor","props","replaceModalItem","bind","saveModalDetails","state","requiredItem","brochure","sessionName","sessionType","syncDirectory","syslogIP","snmpIP","index","setState","item","tempbrochure","deleteItem","tempBrochure","splice","render","map","modalData","textAlign"],"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","sourcesContent":["// import React, { Component } from 'react';\n// import Modal from './Modal.js';\n\n// class List extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.replaceModalItem = this.replaceModalItem.bind(this);\n//         this.saveModalDetails = this.saveModalDetails.bind(this);\n//         this.state = {\n//             requiredItem: 0,\n//             brochure: [\n//                 {\n//                     sessionName: 'Lior Tembel',\n//                     sessionType: 'RX',\n//                     syncDirectory: '/home/Kappa',\n//                     syslogIP: '0.0.0.0',\n//                     snmpIP: '0.0.0.0'\n//                 }, {\n//                     sessionName: 'Lior Tembel',\n//                     sessionType: 'RX',\n//                     syncDirectory: '/home/Kappa',\n//                     syslogIP: '0.0.0.0',\n//                     snmpIP: '0.0.0.0'\n//                 }, {\n//                     sessionName: 'Lior Tembel',\n//                     sessionType: 'RX',\n//                     syncDirectory: '/home/Kappa',\n//                     syslogIP: '0.0.0.0',\n//                     snmpIP: '0.0.0.0'\n//                 },\n//             ]\n//         }\n//     }\n\n//     replaceModalItem(index) {\n//         this.setState({\n//             requiredItem: index\n//         });\n//     }\n\n//     saveModalDetails(item) {\n//         const requiredItem = this.state.requiredItem;\n//         let tempbrochure = this.state.brochure;\n//         tempbrochure[requiredItem] = item;\n//         this.setState({ brochure: tempbrochure });\n//     }\n\n//     deleteItem(index) {\n//         let tempBrochure = this.state.brochure;\n//         tempBrochure.splice(index, 1);\n//         this.setState({ brochure: tempBrochure });\n//     }\n\n//     render() {\n//         const brochure = this.state.brochure.map((item, index) => {\n//             return (\n//                 <tr key={index}>\n//                     <td>{item.sessionName}</td>\n//                     <td>{item.sessionType}</td>\n//                     <td>{item.syncDirectory}</td>\n//                     <td>\n//                         <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n//                             onClick={() => {\n//                                 this.replaceModalItem(index)\n//                                 console.log(this.state.requiredItem)\n//                             }\n//                             }>edit</button> {\" \"}\n//                         <button className=\"btn btn-danger\" onClick={() => this.deleteItem(index)}>remove</button>\n//                     </td>\n//                 </tr>\n//             )\n//         });\n\n//         const requiredItem = this.state.requiredItem;\n//         let modalData = this.state.brochure[requiredItem];\n//         return (\n//             <div>\n//                 <div style={{ textAlign: \"center\" }}>\n//                     <h1>Pillar of Salt Configuration</h1>\n//                 </div>\n//                 <table className=\"table table-striped\">\n//                     <thead>\n//                         <tr>\n//                             <th scope=\"col\">Session Name</th>\n//                             <th scope=\"col\">Session Type</th>\n//                             <th scope=\"col\">Sync Directory</th>\n//                             <th scope=\"col\">Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {brochure}\n//                     </tbody>\n//                 </table>\n//                 <Modal\n//                     sessionName={modalData.sessionName}\n//                     sessionType={modalData.sessionType}\n//                     syncDirectory={modalData.syncDirectory}\n//                     snmpIP={modalData.snmpIP}\n//                     syslogIP={modalData.syslogIP}\n//                     saveModalDetails={this.saveModalDetails}\n//                 />\n//             </div>\n//         );\n//     }\n// }\n\n// export default List;\nimport React, { Component } from 'react';\nimport Modal from './modal.js';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [\n        {\n          sessionName: 'Lior Tembel',\n          sessionType: 'RX',\n          syncDirectory: '/home/Kappa',\n          syslogIP: '0.0.0.0',\n          snmpIP: '0.0.0.0'\n        }, {\n          sessionName: 'Lior Tembel',\n          sessionType: 'RX',\n          syncDirectory: '/home/Kappa',\n          syslogIP: '0.0.0.0',\n          snmpIP: '0.0.0.0'\n        }, {\n          sessionName: 'Lior Tembel',\n          sessionType: 'RX',\n          syncDirectory: '/home/Kappa',\n          syslogIP: '0.0.0.0',\n          snmpIP: '0.0.0.0'\n        },\n      ]\n    }\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.setState({ brochure: tempBrochure });\n  }\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.sessionName}</td>\n          <td>{item.sessionType}</td>\n          <td>{item.syncDirectory}</td>\n          <td>\n            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n              onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}\n            <button className=\"btn btn-danger\" onClick={() => this.deleteItem(index)}>remove</button>\n          </td>\n        </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Pillar of Salt Configuration</h1>\n        </div>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n        <Modal\n          sessionName={modalData.sessionName}\n          sessionType={modalData.sessionType}\n          syncDirectory={modalData.syncDirectory}\n          snmpIP={modalData.snmpIP}\n          syslogIP={modalData.syslogIP}\n          saveModalDetails={this.saveModalDetails}\n        />\n      </div>\n    );\n  }\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}