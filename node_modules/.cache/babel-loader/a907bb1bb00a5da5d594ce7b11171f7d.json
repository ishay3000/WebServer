{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\nimport Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      var brochure = [];\n      this.setState({\n        sessions\n      });\n      var index = 0;\n      this.state.sessions.map(session => {\n        console.log(index);\n        var currentSession = Object.values(session)[0];\n        console.log(currentSession);\n        brochure[index] = {\n          sessionName: currentSession.Name,\n          syncDirectory: {\n            path: currentSession.SyncDirectory.Path\n          },\n          bandwidth: currentSession.Bandwidth.Rate\n        };\n        ++index;\n        this.setState({\n          brochure\n        });\n      });\n    });\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  storeChangedSession(session, modification, sessionNameChanged) {\n    let tmpChangedSessions = this.state.changedSessions;\n    tmpChangedSessions.push({\n      modification: modification,\n      session: session,\n      sessionNameChanged: sessionNameChanged\n    });\n    this.setState({\n      changedIndexes: tmpChangedSessions\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    let currentName = tempbrochure[requiredItem].sessionName;\n    tempbrochure[requiredItem] = item;\n    console.log(item);\n    const sessionNameChanged = currentName !== item.sessionName;\n    this.storeChangedSession(item, 'modified', sessionNameChanged);\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    let tmpSessionName = tempBrochure[index].sessionName;\n    tempBrochure.splice(index, 1);\n    this.storeChangedSession(tmpSessionName, 'deleted');\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to filesystem...');\n    console.log(JSON.stringify(this.state.changedSessions));\n    axios.post('https://localhost:1337/sessions', {\n      data: JSON.stringify(this.state.changedSessions)\n    }).then(res => {\n      console.log(res);\n    });\n    this.state.changedSessions = [];\n  }\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.syncDirectory.path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.replaceModalItem(index),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              this.deleteItem(index);\n            },\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sessions configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Save changes to file\",\n          onClick: this.saveChangesToFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n        sessionName: modalData.sessionName,\n        sessionType: modalData.sessionType,\n        syncDirectory: modalData.syncDirectory,\n        bandwidth: modalData.bandwidth,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Home","Component","constructor","props","replaceModalItem","bind","saveModalDetails","saveChangesToFile","state","requiredItem","brochure","changedSessions","componentDidMount","get","then","res","sessions","data","Sessions","setState","index","map","session","console","log","currentSession","Object","values","sessionName","Name","syncDirectory","path","SyncDirectory","Path","bandwidth","Bandwidth","Rate","storeChangedSession","modification","sessionNameChanged","tmpChangedSessions","push","changedIndexes","item","tempbrochure","currentName","deleteItem","tempBrochure","tmpSessionName","splice","JSON","stringify","post","render","sessionType","modalData","textAlign"],"mappings":"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","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this)\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: []\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        var brochure = []\n        this.setState({ sessions });\n        var index = 0\n        this.state.sessions.map(session => {\n          console.log(index)\n          var currentSession = Object.values(session)[0]\n          console.log(currentSession)\n          brochure[index] = {\n            sessionName: currentSession.Name,\n            syncDirectory: {path: currentSession.SyncDirectory.Path},\n            bandwidth: currentSession.Bandwidth.Rate,\n          }\n          ++index\n          this.setState({ brochure });\n        })\n      })\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  storeChangedSession(session, modification, sessionNameChanged) {\n    let tmpChangedSessions = this.state.changedSessions;\n    tmpChangedSessions.push({\n      modification: modification,\n      session: session,\n      sessionNameChanged: sessionNameChanged\n    })\n    this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    let currentName = tempbrochure[requiredItem].sessionName;\n    tempbrochure[requiredItem] = item;\n    console.log(item);\n    const sessionNameChanged = (currentName !== item.sessionName)\n    \n    this.storeChangedSession(item, 'modified', sessionNameChanged);\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    let tmpSessionName = tempBrochure[index].sessionName;\n    tempBrochure.splice(index, 1);\n\n    this.storeChangedSession(tmpSessionName, 'deleted')\n    this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to filesystem...')\n\n    console.log(JSON.stringify(this.state.changedSessions))\n\n    axios.post('https://localhost:1337/sessions', {\n      data: JSON.stringify(this.state.changedSessions)\n    }).then(res => {\n      console.log(res)\n    })\n\n    this.state.changedSessions = []\n  }\n\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.sessionName}</td>\n          <td>{item.sessionType}</td>\n          <td>{item.syncDirectory.path}</td>\n          <td>\n            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n              onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}\n            <button className=\"btn btn-danger\" onClick={() => {\n              this.deleteItem(index)\n            }\n            }>remove</button>\n          </td>\n        </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Sessions configuration</h1>\n          <input type='button' value='Save changes to file' onClick={this.saveChangesToFile} />\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n        { modalData ?\n          <Modal\n            sessionName={modalData.sessionName}\n            sessionType={modalData.sessionType}\n            syncDirectory={modalData.syncDirectory}\n            bandwidth={modalData.bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          />\n          :\n          null}\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}