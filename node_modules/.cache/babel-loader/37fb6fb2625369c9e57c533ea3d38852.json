{"ast":null,"code":"import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      var brochure = [];\n      this.setState({\n        sessions\n      });\n      var index = 0;\n      this.state.sessions.map(session => {\n        var currentSession = Object.values(session)[0];\n        brochure[index] = {\n          SessionName: currentSession.Name,\n          SessionType: currentSession.Type,\n          Bandwidth: {\n            Rate: currentSession.Bandwidth.Rate\n          },\n          SyncDirectory: {\n            Path: currentSession.SyncDirectory.Path\n          }\n        };\n        ++index;\n        this.setState({\n          brochure\n        });\n      });\n    });\n  }\n\n  replaceModalItem(index, modification) {// console.log(this.state.modification);\n    // this.setState({\n    //   requiredItem: index,\n    //   modification: modification\n    // });\n    // console.log(this.state.modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {// let tmpChangedSessions = this.state.changedSessions;\n    // tmpChangedSessions.push({\n    //   modification: modification,\n    //   session: session,\n    //   sessionNameChangedProps: sessionNameChangedProps\n    // })\n    // this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item, modification) {// const requiredItem = this.state.requiredItem;\n    // let tempbrochure = this.state.brochure;\n    // let currentName = tempbrochure[requiredItem].SessionName;\n    // item.SessionType = tempbrochure[requiredItem].SessionType;\n    // const sessionNameChanged = {\n    //   'sessionNameChanged':\n    //     (currentName !== item.SessionName), 'oldName': currentName\n    //}\n    // tempbrochure[requiredItem] = item;\n    // this.storeChangedSession(item, modification, sessionNameChanged);\n    // this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {// let tempBrochure = this.state.brochure;\n    // let tmpSessionName = tempBrochure[index].SessionName;\n    // tempBrochure.splice(index, 1);\n    // this.storeChangedSession(tmpSessionName, 'deleted')\n    // this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {// console.log('Saving changes to filesystem...')\n    // axios.post('https://localhost:1337/sessions', {\n    //   data: JSON.stringify(this.state.changedSessions)\n    // }).then(res => {\n    //   console.log(res);\n    // })\n    // this.state.changedSessions = []\n  }\n\n  addSession() {// this.state.brochure.push({\n    //   SessionName: '',\n    //   SessionType: '',\n    //   Bandwidth: { Rate: '' },\n    //   SyncDirectory: { Path: '' }\n    // });\n    // this.state.requiredItem = this.state.brochure.length;\n    // this.replaceModalItem(this.state.requiredItem - 1, 'added');\n  }\n\n  render() {\n    //console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return 'hello' // <tr key={index}>\n      //   <td>{item.SessionName}</td>\n      //   <td>{item.SessionType}</td>\n      //   <td>{item.SyncDirectory.Path}</td>\n      //   <td>\n      //     <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n      //       onClick={() => this.replaceModalItem(index, 'modified')}>edit</button> {\" \"}\n      //     <button className=\"btn btn-danger\" onClick={() => {\n      //       this.deleteItem(index)\n      //     }\n      //     }>remove</button>\n      //   </td>\n      // </tr>\n      ;\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n    return 'hello' // <div>\n    //   <div style={{ textAlign: \"center\" }}>\n    //     <h1>Sessions configuration</h1>\n    //     <button className=\"btn btn-warning\"\n    //       onClick={() => this.saveChangesToFile()\n    //       }>Save changes</button> {\" \"}\n    //     <button className='btn btn-info' data-toggle=\"modal\" data-target=\"#exampleModal\"\n    //       onClick={() => {\n    //         this.addSession()\n    //       }}>Add new session</button> {\" \"}\n    //   </div>\n    //   <table className=\"table table-striped\">\n    //     <thead>\n    //       <tr>\n    //         <th scope=\"col\">Session Name</th>\n    //         <th scope=\"col\">Session Type</th>\n    //         <th scope=\"col\">Sync Directory</th>\n    //         <th scope=\"col\">Actions</th>\n    //       </tr>\n    //     </thead>\n    //     <tbody>\n    //       {brochure}\n    //     </tbody>\n    //   </table>\n    //   {tmpModal ? <Modal\n    //     SessionName={''}\n    //     SessionType={''}\n    //     SyncDirectory={''}\n    //     Bandwidth={''}\n    //     saveModalDetails={this.saveModalDetails}\n    //   />\n    //     :\n    //     (modalData ? <Modal\n    //       SessionName={modalData.SessionName}\n    //       SessionType={modalData.SessionType}\n    //       SyncDirectory={modalData.SyncDirectory}\n    //       Bandwidth={modalData.Bandwidth}\n    //       saveModalDetails={this.saveModalDetails}\n    //     /> : null)}\n    //   {/* { modalData ?\n    //     <Modal\n    //       SessionName={modalData.SessionName}\n    //       SessionType={modalData.SessionType}\n    //       SyncDirectory={modalData.SyncDirectory}\n    //       Bandwidth={modalData.Bandwidth}\n    //       saveModalDetails={this.saveModalDetails}\n    //     />\n    //     :\n    //     null} */}\n    // </div>\n    ;\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Home","Component","constructor","props","replaceModalItem","bind","saveModalDetails","saveChangesToFile","state","requiredItem","brochure","changedSessions","modification","componentDidMount","get","then","res","sessions","data","Sessions","setState","index","map","session","currentSession","Object","values","SessionName","Name","SessionType","Type","Bandwidth","Rate","SyncDirectory","Path","storeChangedSession","sessionNameChangedProps","item","deleteItem","addSession","render","modalData","tmpModal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,KAAK,CAACe,GAAN,CAAW,iCAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,QAA1B;AACA,UAAIT,QAAQ,GAAG,EAAf;AACA,WAAKU,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACA,UAAII,KAAK,GAAG,CAAZ;AACA,WAAKb,KAAL,CAAWS,QAAX,CAAoBK,GAApB,CAAwBC,OAAO,IAAI;AACjC,YAAIC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuB,CAAvB,CAArB;AACAb,QAAAA,QAAQ,CAACW,KAAD,CAAR,GAAkB;AAChBM,UAAAA,WAAW,EAAEH,cAAc,CAACI,IADZ;AAEhBC,UAAAA,WAAW,EAAEL,cAAc,CAACM,IAFZ;AAGhBC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,IAAI,EAAER,cAAc,CAACO,SAAf,CAAyBC;AAAjC,WAHK;AAIhBC,UAAAA,aAAa,EAAE;AAAEC,YAAAA,IAAI,EAAEV,cAAc,CAACS,aAAf,CAA6BC;AAArC;AAJC,SAAlB;AAMA,UAAEb,KAAF;AACA,aAAKD,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACD,OAVD;AAWD,KAjBH;AAkBD;;AAEDN,EAAAA,gBAAgB,CAACiB,KAAD,EAAQT,YAAR,EAAsB,CACpC;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDuB,EAAAA,mBAAmB,CAACZ,OAAD,EAAUX,YAAV,EAAwBwB,uBAAxB,EAAiD,CAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED9B,EAAAA,gBAAgB,CAAC+B,IAAD,EAAOzB,YAAP,EAAqB,CACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACD;;AAED0B,EAAAA,UAAU,CAACjB,KAAD,EAAQ,CAChB;AACA;AACA;AAEA;AACA;AACD;;AAEDd,EAAAA,iBAAiB,GAAG,CAClB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACD;;AAEDgC,EAAAA,UAAU,GAAG,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM9B,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAAX,CAAoBY,GAApB,CAAwB,CAACe,IAAD,EAAOhB,KAAP,KAAiB;AACxD,aACE,OADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAgBD,KAjBgB,CAAjB;AAmBA,UAAMZ,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAAhC;AACA,QAAIgC,SAAS,GAAG,KAAKjC,KAAL,CAAWE,QAAX,CAAoBD,YAApB,CAAhB;AACA,QAAIiC,QAAJ;AAEA,WACE,OADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAvDF;AAyDD;;AAzL+C,C,CAyMhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this)\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: ''\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        var brochure = []\n        this.setState({ sessions });\n        var index = 0\n        this.state.sessions.map(session => {\n          var currentSession = Object.values(session)[0]\n          brochure[index] = {\n            SessionName: currentSession.Name,\n            SessionType: currentSession.Type,\n            Bandwidth: { Rate: currentSession.Bandwidth.Rate },\n            SyncDirectory: { Path: currentSession.SyncDirectory.Path }\n          }\n          ++index\n          this.setState({ brochure });\n        })\n      })\n  }\n\n  replaceModalItem(index, modification) {\n    // console.log(this.state.modification);\n    // this.setState({\n    //   requiredItem: index,\n    //   modification: modification\n    // });\n    // console.log(this.state.modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {\n    // let tmpChangedSessions = this.state.changedSessions;\n    // tmpChangedSessions.push({\n    //   modification: modification,\n    //   session: session,\n    //   sessionNameChangedProps: sessionNameChangedProps\n    // })\n    // this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item, modification) {\n    // const requiredItem = this.state.requiredItem;\n    // let tempbrochure = this.state.brochure;\n    // let currentName = tempbrochure[requiredItem].SessionName;\n    // item.SessionType = tempbrochure[requiredItem].SessionType;\n    // const sessionNameChanged = {\n    //   'sessionNameChanged':\n    //     (currentName !== item.SessionName), 'oldName': currentName\n    //}\n\n    // tempbrochure[requiredItem] = item;\n\n    // this.storeChangedSession(item, modification, sessionNameChanged);\n    // this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    // let tempBrochure = this.state.brochure;\n    // let tmpSessionName = tempBrochure[index].SessionName;\n    // tempBrochure.splice(index, 1);\n\n    // this.storeChangedSession(tmpSessionName, 'deleted')\n    // this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    // console.log('Saving changes to filesystem...')\n\n    // axios.post('https://localhost:1337/sessions', {\n    //   data: JSON.stringify(this.state.changedSessions)\n    // }).then(res => {\n    //   console.log(res);\n    // })\n\n    // this.state.changedSessions = []\n  }\n\n  addSession() {\n    // this.state.brochure.push({\n    //   SessionName: '',\n    //   SessionType: '',\n    //   Bandwidth: { Rate: '' },\n    //   SyncDirectory: { Path: '' }\n    // });\n    // this.state.requiredItem = this.state.brochure.length;\n    // this.replaceModalItem(this.state.requiredItem - 1, 'added');\n  }\n\n\n  render() {\n    //console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        'hello'\n        // <tr key={index}>\n        //   <td>{item.SessionName}</td>\n        //   <td>{item.SessionType}</td>\n        //   <td>{item.SyncDirectory.Path}</td>\n        //   <td>\n        //     <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n        //       onClick={() => this.replaceModalItem(index, 'modified')}>edit</button> {\" \"}\n        //     <button className=\"btn btn-danger\" onClick={() => {\n        //       this.deleteItem(index)\n        //     }\n        //     }>remove</button>\n        //   </td>\n        // </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n\n    return (\n      'hello'\n      // <div>\n      //   <div style={{ textAlign: \"center\" }}>\n      //     <h1>Sessions configuration</h1>\n      //     <button className=\"btn btn-warning\"\n      //       onClick={() => this.saveChangesToFile()\n      //       }>Save changes</button> {\" \"}\n      //     <button className='btn btn-info' data-toggle=\"modal\" data-target=\"#exampleModal\"\n      //       onClick={() => {\n      //         this.addSession()\n      //       }}>Add new session</button> {\" \"}\n      //   </div>\n\n      //   <table className=\"table table-striped\">\n      //     <thead>\n      //       <tr>\n      //         <th scope=\"col\">Session Name</th>\n      //         <th scope=\"col\">Session Type</th>\n      //         <th scope=\"col\">Sync Directory</th>\n      //         <th scope=\"col\">Actions</th>\n      //       </tr>\n      //     </thead>\n      //     <tbody>\n      //       {brochure}\n      //     </tbody>\n      //   </table>\n\n      //   {tmpModal ? <Modal\n      //     SessionName={''}\n      //     SessionType={''}\n      //     SyncDirectory={''}\n      //     Bandwidth={''}\n      //     saveModalDetails={this.saveModalDetails}\n      //   />\n      //     :\n      //     (modalData ? <Modal\n      //       SessionName={modalData.SessionName}\n      //       SessionType={modalData.SessionType}\n      //       SyncDirectory={modalData.SyncDirectory}\n      //       Bandwidth={modalData.Bandwidth}\n      //       saveModalDetails={this.saveModalDetails}\n      //     /> : null)}\n\n      //   {/* { modalData ?\n      //     <Modal\n      //       SessionName={modalData.SessionName}\n      //       SessionType={modalData.SessionType}\n      //       SyncDirectory={modalData.SyncDirectory}\n      //       Bandwidth={modalData.Bandwidth}\n      //       saveModalDetails={this.saveModalDetails}\n      //     />\n      //     :\n      //     null} */}\n\n      // </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}