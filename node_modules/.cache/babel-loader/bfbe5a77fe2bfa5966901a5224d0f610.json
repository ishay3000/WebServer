{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\nimport Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nimport { Button } from 'bootstrap';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedIndexes: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      var brochure = [];\n      this.setState({\n        sessions\n      });\n      var index = 0;\n      this.state.sessions.map(session => {\n        console.log(index);\n        var currentSession = Object.values(session)[0];\n        brochure[index] = {\n          sessionName: currentSession.Name,\n          sessionType: currentSession.Type,\n          syncDirectory: currentSession.SyncDirectory.Path,\n          bandwidth: currentSession.Bandwidth.Rate\n        };\n        ++index;\n        this.setState({\n          brochure\n        });\n      });\n    });\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n    let tempChangedIndexes = this.state.changedIndexes;\n    tempChangedIndexes.push({\n      modification: 'changed',\n      index: requiredItem\n    });\n    this.setState({\n      changedIndexes: tempChangedIndexes\n    });\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  saveChangesToFile() {\n    this.state.changedIndexes.forEach(element => {\n      console.log(element);\n    });\n  }\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.syncDirectory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.replaceModalItem(index),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              //        console.log(index)\n              this.deleteItem(index);\n            },\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sessions configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Save changes to file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n        sessionName: modalData.sessionName,\n        sessionType: modalData.sessionType,\n        syncDirectory: modalData.syncDirectory,\n        bandwidth: modalData.bandwidth,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Button","Home","Component","constructor","props","replaceModalItem","bind","saveModalDetails","state","requiredItem","brochure","changedIndexes","componentDidMount","get","then","res","sessions","data","Sessions","setState","index","map","session","console","log","currentSession","Object","values","sessionName","Name","sessionType","Type","syncDirectory","SyncDirectory","Path","bandwidth","Bandwidth","Rate","item","tempbrochure","tempChangedIndexes","push","modification","deleteItem","tempBrochure","splice","saveChangesToFile","forEach","element","render","modalData","textAlign"],"mappings":"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","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nimport { Button } from 'bootstrap';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedIndexes: []\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        var brochure = []\n        this.setState({ sessions });\n        var index = 0\n        this.state.sessions.map(session => {\n          console.log(index)\n          var currentSession = Object.values(session)[0]\n          brochure[index] = {\n            sessionName: currentSession.Name,\n            sessionType: currentSession.Type,\n            syncDirectory: currentSession.SyncDirectory.Path,\n            bandwidth: currentSession.Bandwidth.Rate,\n          }\n          ++index\n          this.setState({ brochure });\n        })\n      })\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n\n    let tempChangedIndexes = this.state.changedIndexes;\n    tempChangedIndexes.push({\n      modification: 'changed',\n      index: requiredItem\n    })\n    \n    this.setState({ changedIndexes: tempChangedIndexes });\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    this.state.changedIndexes.forEach(element => {\n      console.log(element)\n    });\n  }\n\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.sessionName}</td>\n          <td>{item.sessionType}</td>\n          <td>{item.syncDirectory}</td>\n          <td>\n            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n              onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}\n            <button className=\"btn btn-danger\" onClick={() => {\n              //        console.log(index)\n              this.deleteItem(index)\n            }\n            }>remove</button>\n          </td>\n        </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Sessions configuration</h1>\n          <input type='button' value='Save changes to file' />\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n        { modalData ?\n          <Modal\n            sessionName={modalData.sessionName}\n            sessionType={modalData.sessionType}\n            syncDirectory={modalData.syncDirectory}\n            bandwidth={modalData.bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          />\n          :\n          null}\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}