{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\nimport Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      var brochure = [];\n      this.setState({\n        sessions\n      });\n      var index = 0;\n      this.state.sessions.map(session => {\n        var currentSession = Object.values(session)[0];\n        brochure[index] = {\n          SessionName: currentSession.Name,\n          SessionType: currentSession.Type,\n          Bandwidth: {\n            Rate: currentSession.Bandwidth.Rate\n          },\n          SyncDirectory: {\n            Path: currentSession.SyncDirectory.Path\n          }\n        };\n        ++index;\n        this.setState({\n          brochure\n        });\n      });\n    });\n  }\n\n  replaceModalItem(index, modification) {\n    this.setState({\n      requiredItem: index,\n      modification: modification\n    });\n    console.log(this.state.modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {\n    let tmpChangedSessions = this.state.changedSessions;\n    tmpChangedSessions.push({\n      modification: modification,\n      session: session,\n      sessionNameChangedProps: sessionNameChangedProps\n    });\n    this.setState({\n      changedIndexes: tmpChangedSessions\n    });\n  }\n\n  saveModalDetails(item, modification) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    let currentName = tempbrochure[requiredItem].SessionName;\n    item.SessionType = tempbrochure[requiredItem].SessionType;\n    const sessionNameChanged = {\n      'sessionNameChanged': currentName !== item.SessionName,\n      'oldName': currentName\n    };\n    tempbrochure[requiredItem] = item;\n    this.storeChangedSession(item, modification, sessionNameChanged);\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    let tmpSessionName = tempBrochure[index].SessionName;\n    tempBrochure.splice(index, 1);\n    this.storeChangedSession(tmpSessionName, 'deleted');\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to filesystem...');\n    axios.post('https://localhost:1337/sessions', {\n      data: JSON.stringify(this.state.changedSessions)\n    }).then(res => {\n      console.log(res);\n    });\n    this.state.changedSessions = [];\n  }\n\n  addSession() {\n    this.state.brochure.push({\n      SessionName: '',\n      SessionType: '',\n      Bandwidth: {\n        Rate: ''\n      },\n      SyncDirectory: {\n        Path: ''\n      }\n    });\n    this.state.requiredItem = this.state.brochure.length;\n    this.replaceModalItem(this.state.requiredItem - 1, 'added');\n  }\n\n  render() {\n    console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.SessionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.SessionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.SyncDirectory.Path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.replaceModalItem(index, 'modified'),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              this.deleteItem(index);\n            },\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sessions configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => this.saveChangesToFile(),\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModal\",\n          onClick: () => {\n            this.addSession();\n          },\n          children: \"Add new session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), tmpModal ? /*#__PURE__*/_jsxDEV(Modal, {\n        SessionName: '',\n        SessionType: '',\n        SyncDirectory: '',\n        Bandwidth: '',\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this) : modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n        SessionName: modalData.SessionName,\n        SessionType: modalData.SessionType,\n        SyncDirectory: modalData.SyncDirectory,\n        Bandwidth: modalData.Bandwidth,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Home","Component","constructor","props","replaceModalItem","bind","saveModalDetails","saveChangesToFile","state","requiredItem","brochure","changedSessions","modification","componentDidMount","get","then","res","sessions","data","Sessions","setState","index","map","session","currentSession","Object","values","SessionName","Name","SessionType","Type","Bandwidth","Rate","SyncDirectory","Path","console","log","storeChangedSession","sessionNameChangedProps","tmpChangedSessions","push","changedIndexes","item","tempbrochure","currentName","sessionNameChanged","deleteItem","tempBrochure","tmpSessionName","splice","post","JSON","stringify","addSession","length","render","modalData","tmpModal","textAlign"],"mappings":"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","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this)\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: ''\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        var brochure = []\n        this.setState({ sessions });\n        var index = 0\n        this.state.sessions.map(session => {\n          var currentSession = Object.values(session)[0]\n          brochure[index] = {\n            SessionName: currentSession.Name,\n            SessionType: currentSession.Type,\n            Bandwidth: { Rate: currentSession.Bandwidth.Rate },\n            SyncDirectory: { Path: currentSession.SyncDirectory.Path }\n          }\n          ++index\n          this.setState({ brochure });\n        })\n      })\n  }\n\n  replaceModalItem(index, modification) {\n    this.setState({\n      requiredItem: index,\n      modification: modification\n    });\n    console.log(this.state.modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {\n    let tmpChangedSessions = this.state.changedSessions;\n    tmpChangedSessions.push({\n      modification: modification,\n      session: session,\n      sessionNameChangedProps: sessionNameChangedProps\n    })\n    this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item, modification) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    let currentName = tempbrochure[requiredItem].SessionName;\n    item.SessionType = tempbrochure[requiredItem].SessionType;\n    const sessionNameChanged = {\n      'sessionNameChanged':\n        (currentName !== item.SessionName), 'oldName': currentName\n    }\n\n    tempbrochure[requiredItem] = item;\n\n    this.storeChangedSession(item, modification, sessionNameChanged);\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    let tmpSessionName = tempBrochure[index].SessionName;\n    tempBrochure.splice(index, 1);\n\n    this.storeChangedSession(tmpSessionName, 'deleted')\n    this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to filesystem...')\n\n    axios.post('https://localhost:1337/sessions', {\n      data: JSON.stringify(this.state.changedSessions)\n    }).then(res => {\n      console.log(res);\n    })\n\n    this.state.changedSessions = []\n  }\n\n  addSession() {\n    this.state.brochure.push({\n      SessionName: '',\n      SessionType: '',\n      Bandwidth: { Rate: '' },\n      SyncDirectory: { Path: '' }\n    });\n    this.state.requiredItem = this.state.brochure.length;\n    this.replaceModalItem(this.state.requiredItem - 1, 'added');\n  }\n\n\n  render() {\n    console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.SessionName}</td>\n          <td>{item.SessionType}</td>\n          <td>{item.SyncDirectory.Path}</td>\n          <td>\n            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n              onClick={() => this.replaceModalItem(index, 'modified')}>edit</button> {\" \"}\n            <button className=\"btn btn-danger\" onClick={() => {\n              this.deleteItem(index)\n            }\n            }>remove</button>\n          </td>\n        </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Sessions configuration</h1>\n          <button className=\"btn btn-warning\"\n            onClick={() => this.saveChangesToFile()\n            }>Save changes</button> {\" \"}\n          <button className='btn btn-info' data-toggle=\"modal\" data-target=\"#exampleModal\"\n            onClick={() => {\n              this.addSession()\n            }}>Add new session</button> {\" \"}\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n\n        {tmpModal ? <Modal\n          SessionName={''}\n          SessionType={''}\n          SyncDirectory={''}\n          Bandwidth={''}\n          saveModalDetails={this.saveModalDetails}\n        />\n          :\n          (modalData ? <Modal\n            SessionName={modalData.SessionName}\n            SessionType={modalData.SessionType}\n            SyncDirectory={modalData.SyncDirectory}\n            Bandwidth={modalData.Bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          /> : null)}\n\n        {/* { modalData ?\n          <Modal\n            SessionName={modalData.SessionName}\n            SessionType={modalData.SessionType}\n            SyncDirectory={modalData.SyncDirectory}\n            Bandwidth={modalData.Bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          />\n          :\n          null} */}\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}