{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\n// import React, { Component } from 'react';\n// import Modal from './Modal.js';\n// import Axios from 'axios';\n// class Home extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.replaceModalItem = this.replaceModalItem.bind(this);\n//     this.saveModalDetails = this.saveModalDetails.bind(this);\n//     Axios.get('https://localhost:1337/sessions')\n//       .then(res => {\n//         console.log(res)\n//       })\n//       this.state = {\n//         requiredItem: 0,\n//         brochure: []\n//       }\n//       for (var i = 0; i < 2; i++) {\n//         this.state.brochure[i] = {\n//           sessionName: 'Lior Tembel',\n//           sessionType: 'RX',\n//           syncDirectory: '/home/Kappa',\n//           syslogIP: '0.0.0.0',\n//           snmpIP: '0.0.0.0'\n//         }\n//       }\n//         componentDidMount() {\n//     axios.get(`https://localhost:1337/sessions`)\n//       .then(res => {\n//         const sessions = res.data.Sessions\n//         // console.log(sessions)\n//         //console.log(persons)\n//         this.setState({ sessions });\n//         // console.log(this.state.persons)\n//       })\n//     // console.log(this.state.persons)\n//     //this.state.persons[\"Sessions\"].map(person => console.log(\"test\"))\n//     // for (var item in this.state.persons[\"Sessions\"])\n//     // {\n//     //    console.log(item)\n//     // }\n//   }\n//   }\n//   replaceModalItem(index) {\n//     this.setState({\n//       requiredItem: index\n//     });\n//   }\n//   saveModalDetails(item) {\n//     const requiredItem = this.state.requiredItem;\n//     let tempbrochure = this.state.brochure;\n//     tempbrochure[requiredItem] = item;\n//     this.setState({ brochure: tempbrochure });\n//   }\n//   deleteItem(index) {\n//     let tempBrochure = this.state.brochure;\n//     tempBrochure.splice(index, 1);\n//     this.setState({ brochure: tempBrochure });\n//   }\n//   render() {\n//     const brochure = this.state.brochure.map((item, index) => {\n//       return (\n//         <tr key={index}>\n//           <td>{item.sessionName}</td>\n//           <td>{item.sessionType}</td>\n//           <td>{item.syncDirectory}</td>\n//           <td>\n//             <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n//               onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}\n//             <button className=\"btn btn-danger\" onClick={() => {\n//               console.log(index)\n//               this.deleteItem(index)\n//             }\n//             }>remove</button>\n//           </td>\n//         </tr>\n//       )\n//     });\n//     const requiredItem = this.state.requiredItem;\n//     let modalData = this.state.brochure[requiredItem];\n//     console.log(modalData)\n//     return (\n//       <div>\n//         <div style={{ textAlign: \"center\" }}>\n//           <h1>Pillar of Salt Configuration</h1>\n//         </div>\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">Session Name</th>\n//               <th scope=\"col\">Session Type</th>\n//               <th scope=\"col\">Sync Directory</th>\n//               <th scope=\"col\">Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {brochure}\n//           </tbody>\n//         </table>\n//         { modalData ?\n//           <Modal\n//             sessionName={modalData.sessionName}\n//             sessionType={modalData.sessionType}\n//             syncDirectory={modalData.syncDirectory}\n//             snmpIP={modalData.snmpIP}\n//             syslogIP={modalData.syslogIP}\n//             saveModalDetails={this.saveModalDetails}\n//           />\n//           :\n//           null}\n//       </div>\n//     );\n//   }\n// }\n// export default Home;\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sessions: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions; // console.log(sessions)\n      //console.log(persons)\n\n      this.setState({\n        sessions\n      }); // console.log(this.state.persons)\n    }); // console.log(this.state.persons)\n    //this.state.persons[\"Sessions\"].map(person => console.log(\"test\"))\n    // for (var item in this.state.persons[\"Sessions\"])\n    // {\n    //    console.log(item)\n    // }\n  } // isJson(str) {\n  //   try {\n  //     JSON.parse(str);\n  //   } catch (e) {\n  //     return false;\n  //   }\n  //   return true;\n  // }\n\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"Hello\", this.state.sessions.map(session => {\n        console.log(Object.values(session)[0].Type);\n      }) // console.log(this.isJson(this.state.sessions))\n      // this.state.sessions.forEach(session => {\n      //   console.log(session)\n      // })\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["React","axios","Home","Component","state","sessions","componentDidMount","get","then","res","data","Sessions","setState","replaceModalItem","index","requiredItem","saveModalDetails","item","tempbrochure","brochure","deleteItem","tempBrochure","splice","render","map","session","console","log","Object","values","Type"],"mappingskB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAAA;AAAA;AAAA,SA4BhDC,KA5BgD,GA4BxC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KA5BwC;AAAA;;AAgChDC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,GAAN,CAAW,iCAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMJ,QAAQ,GAAGI,GAAG,CAACC,IAAJ,CAASC,QAA1B,CADW,CAEX;AAEA;;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd,EALW,CAMX;AACD,KARH,EADkB,CAWlB;AACA;AACA;AACA;AACA;AACA;AAED,GAlD+C,CAoDhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEQ,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACxB,SAAKF,QAAL,CAAc;AACZG,MAAAA,YAAY,EAAED;AADF,KAAd;AAGD;;AAEDE,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACrB,UAAMF,YAAY,GAAG,KAAKX,KAAL,CAAWW,YAAhC;AACA,QAAIG,YAAY,GAAG,KAAKd,KAAL,CAAWe,QAA9B;AACAD,IAAAA,YAAY,CAACH,YAAD,CAAZ,GAA6BE,IAA7B;AACA,SAAKL,QAAL,CAAc;AAAEO,MAAAA,QAAQ,EAAED;AAAZ,KAAd;AACD;;AAEDE,EAAAA,UAAU,CAACN,KAAD,EAAQ;AAChB,QAAIO,YAAY,GAAG,KAAKjB,KAAL,CAAWe,QAA9B;AACAE,IAAAA,YAAY,CAACC,MAAb,CAAoBR,KAApB,EAA2B,CAA3B;AACA,SAAKF,QAAL,CAAc;AAAEO,MAAAA,QAAQ,EAAEE;AAAZ,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,0BAGI,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAwBC,OAAO,IAAI;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuB,CAAvB,EAA0BK,IAAtC;AACD,OAFD,CAHJ,CAMI;AACA;AACA;AACA;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA9F+C","sourcesContent":["// import React, { Component } from 'react';\n// import Modal from './Modal.js';\n// import Axios from 'axios';\n\n// class Home extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.replaceModalItem = this.replaceModalItem.bind(this);\n//     this.saveModalDetails = this.saveModalDetails.bind(this);\n\n//     Axios.get('https://localhost:1337/sessions')\n//       .then(res => {\n//         console.log(res)\n//       })\n//       this.state = {\n//         requiredItem: 0,\n//         brochure: []\n//       }\n\n//       for (var i = 0; i < 2; i++) {\n//         this.state.brochure[i] = {\n//           sessionName: 'Lior Tembel',\n//           sessionType: 'RX',\n//           syncDirectory: '/home/Kappa',\n//           syslogIP: '0.0.0.0',\n//           snmpIP: '0.0.0.0'\n//         }\n//       }\n\n//         componentDidMount() {\n//     axios.get(`https://localhost:1337/sessions`)\n//       .then(res => {\n//         const sessions = res.data.Sessions\n//         // console.log(sessions)\n\n//         //console.log(persons)\n//         this.setState({ sessions });\n//         // console.log(this.state.persons)\n//       })\n\n//     // console.log(this.state.persons)\n//     //this.state.persons[\"Sessions\"].map(person => console.log(\"test\"))\n//     // for (var item in this.state.persons[\"Sessions\"])\n//     // {\n//     //    console.log(item)\n//     // }\n\n//   }\n      \n//   }\n\n\n//   replaceModalItem(index) {\n//     this.setState({\n//       requiredItem: index\n//     });\n//   }\n\n//   saveModalDetails(item) {\n//     const requiredItem = this.state.requiredItem;\n//     let tempbrochure = this.state.brochure;\n//     tempbrochure[requiredItem] = item;\n//     this.setState({ brochure: tempbrochure });\n//   }\n\n//   deleteItem(index) {\n//     let tempBrochure = this.state.brochure;\n//     tempBrochure.splice(index, 1);\n//     this.setState({ brochure: tempBrochure });\n//   }\n\n//   render() {\n//     const brochure = this.state.brochure.map((item, index) => {\n//       return (\n//         <tr key={index}>\n//           <td>{item.sessionName}</td>\n//           <td>{item.sessionType}</td>\n//           <td>{item.syncDirectory}</td>\n//           <td>\n//             <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n//               onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}\n//             <button className=\"btn btn-danger\" onClick={() => {\n//               console.log(index)\n//               this.deleteItem(index)\n//             }\n//             }>remove</button>\n//           </td>\n//         </tr>\n//       )\n//     });\n\n//     const requiredItem = this.state.requiredItem;\n//     let modalData = this.state.brochure[requiredItem];\n//     console.log(modalData)\n//     return (\n//       <div>\n//         <div style={{ textAlign: \"center\" }}>\n//           <h1>Pillar of Salt Configuration</h1>\n//         </div>\n\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">Session Name</th>\n//               <th scope=\"col\">Session Type</th>\n//               <th scope=\"col\">Sync Directory</th>\n//               <th scope=\"col\">Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {brochure}\n//           </tbody>\n//         </table>\n//         { modalData ?\n//           <Modal\n//             sessionName={modalData.sessionName}\n//             sessionType={modalData.sessionType}\n//             syncDirectory={modalData.syncDirectory}\n//             snmpIP={modalData.snmpIP}\n//             syslogIP={modalData.syslogIP}\n//             saveModalDetails={this.saveModalDetails}\n//           />\n//           :\n//           null}\n\n//       </div>\n//     );\n//   }\n// }\n\n// export default Home;\n\nimport React from 'react';\n\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.replaceModalItem = this.replaceModalItem.bind(this);\n//     this.saveModalDetails = this.saveModalDetails.bind(this);\n\n//     Axios.get('https://localhost:1337/sessions')\n//       .then(res => {\n//         console.log(res)\n//       })\n//       this.state = {\n//         requiredItem: 0,\n//         brochure: []\n//       }\n\n//       for (var i = 0; i < 2; i++) {\n//         this.state.brochure[i] = {\n//           sessionName: 'Lior Tembel',\n//           sessionType: 'RX',\n//           syncDirectory: '/home/Kappa',\n//           syslogIP: '0.0.0.0',\n//           snmpIP: '0.0.0.0'\n//         }\n//       }\n\n\n\n  state = {\n    sessions: []\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        // console.log(sessions)\n\n        //console.log(persons)\n        this.setState({ sessions });\n        // console.log(this.state.persons)\n      })\n\n    // console.log(this.state.persons)\n    //this.state.persons[\"Sessions\"].map(person => console.log(\"test\"))\n    // for (var item in this.state.persons[\"Sessions\"])\n    // {\n    //    console.log(item)\n    // }\n\n  }\n\n  // isJson(str) {\n  //   try {\n  //     JSON.parse(str);\n  //   } catch (e) {\n  //     return false;\n  //   }\n  //   return true;\n  // }\n    replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.setState({ brochure: tempBrochure });\n  }\n\n  render() {\n    return (\n      <ul>\n        Hello\n        {\n          this.state.sessions.map(session => {\n            console.log(Object.values(session)[0].Type)\n          })\n          // console.log(this.isJson(this.state.sessions))\n          // this.state.sessions.forEach(session => {\n          //   console.log(session)\n          // })\n        }\n      </ul>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}