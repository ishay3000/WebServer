{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\nimport Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile();\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedIndexes: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      var brochure = [];\n      this.setState({\n        sessions\n      });\n      var index = 0;\n      this.state.sessions.map(session => {\n        console.log(index);\n        var currentSession = Object.values(session)[0];\n        brochure[index] = {\n          sessionName: currentSession.Name,\n          sessionType: currentSession.Type,\n          syncDirectory: currentSession.SyncDirectory.Path,\n          bandwidth: currentSession.Bandwidth.Rate\n        };\n        ++index;\n        this.setState({\n          brochure\n        });\n      });\n    });\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  storeChangedIndex(index, modification) {\n    let tempChangedIndexes = this.state.changedIndexes;\n    tempChangedIndexes.push({\n      modification: modification,\n      index: index\n    });\n    this.setState({\n      changedIndexes: tempChangedIndexes\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n    this.storeChangedIndex(requiredItem, 'modified');\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n    this.storeChangedIndex(index, 'deleted');\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to file...');\n    console.log(this.state.changedIndexes); // this.state.changedIndexes.forEach(element => {\n    //   console.log(element)\n    // });\n  }\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.sessionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.syncDirectory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.replaceModalItem(index),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              this.deleteItem(index);\n            },\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sessions configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Save changes to file\",\n          onClick: this.saveChangesToFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n        sessionName: modalData.sessionName,\n        sessionType: modalData.sessionType,\n        syncDirectory: modalData.syncDirectory,\n        bandwidth: modalData.bandwidth,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Home","Component","constructor","props","replaceModalItem","bind","saveModalDetails","saveChangesToFile","state","requiredItem","brochure","changedIndexes","componentDidMount","get","then","res","sessions","data","Sessions","setState","index","map","session","console","log","currentSession","Object","values","sessionName","Name","sessionType","Type","syncDirectory","SyncDirectory","Path","bandwidth","Bandwidth","Rate","storeChangedIndex","modification","tempChangedIndexes","push","item","tempbrochure","deleteItem","tempBrochure","splice","render","modalData","textAlign"],"mappings":"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","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile()\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedIndexes: []\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        var brochure = []\n        this.setState({ sessions });\n        var index = 0\n        this.state.sessions.map(session => {\n          console.log(index)\n          var currentSession = Object.values(session)[0]\n          brochure[index] = {\n            sessionName: currentSession.Name,\n            sessionType: currentSession.Type,\n            syncDirectory: currentSession.SyncDirectory.Path,\n            bandwidth: currentSession.Bandwidth.Rate,\n          }\n          ++index\n          this.setState({ brochure });\n        })\n      })\n  }\n\n  replaceModalItem(index) {\n    this.setState({\n      requiredItem: index\n    });\n  }\n\n  storeChangedIndex(index, modification) {\n    let tempChangedIndexes = this.state.changedIndexes;\n    tempChangedIndexes.push({\n      modification: modification,\n      index: index\n    })\n    this.setState({ changedIndexes: tempChangedIndexes });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    tempbrochure[requiredItem] = item;\n\n    this.storeChangedIndex(requiredItem, 'modified')\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    tempBrochure.splice(index, 1);\n\n    this.storeChangedIndex(index, 'deleted')\n    this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to file...')\n    console.log(this.state.changedIndexes)\n    // this.state.changedIndexes.forEach(element => {\n    //   console.log(element)\n    // });\n  }\n\n\n  render() {\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.sessionName}</td>\n          <td>{item.sessionType}</td>\n          <td>{item.syncDirectory}</td>\n          <td>\n            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n              onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}\n            <button className=\"btn btn-danger\" onClick={() => {\n              this.deleteItem(index)\n            }\n            }>remove</button>\n          </td>\n        </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Sessions configuration</h1>\n          <input type='button' value='Save changes to file' onClick={this.saveChangesToFile} />\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n        { modalData ?\n          <Modal\n            sessionName={modalData.sessionName}\n            sessionType={modalData.sessionType}\n            syncDirectory={modalData.syncDirectory}\n            bandwidth={modalData.bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          />\n          :\n          null}\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}