{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Route, Link, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport Login from './Login';\nimport GuardedRoute from 'react-guarded-route';\nimport Menu from './Menu';\nimport About from './About';\nimport Config from \"./Config.js\"; // Scripts\n\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/popper.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js'; // Styles\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst CheckUserLogged = checkIfSignedIn => {\n  let isUserSigned = sessionStorage.getItem('userLoggedIn');\n  return checkIfSignedIn ? isUserSigned !== null : isUserSigned === null;\n};\n\n_c = CheckUserLogged;\n\nconst AuthedRoutes = ({ ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Menu, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuardedRoute, {\n        exact: true,\n        path: \"/\",\n        component: Home,\n        validatorFunction: CheckUserLogged(true),\n        redirectTo: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuardedRoute, {\n        path: \"/about\",\n        component: About,\n        validatorFunction: CheckUserLogged(true),\n        redirectTo: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuardedRoute, {\n        path: \"/config\",\n        component: Config,\n        validatorFunction: CheckUserLogged(true),\n        redirectTo: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = AuthedRoutes;\n\nconst UnauthedRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GuardedRoute, {\n      path: \"/login\",\n      component: Login,\n      validatorFunction: CheckUserLogged(false),\n      redirectTo: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = UnauthedRoutes;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/(login)\",\n        component: UnauthedRoutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: AuthedRoutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        component: NotFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\n\nfunction NotFound() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page Not Found \\xAF\\\\_(\\u30C4)_/\\xAF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = NotFound;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CheckUserLogged\");\n$RefreshReg$(_c2, \"AuthedRoutes\");\n$RefreshReg$(_c3, \"UnauthedRoutes\");\n$RefreshReg$(_c4, \"App\");\n$RefreshReg$(_c5, \"NotFound\");","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/App.js"],"names":["React","useState","Route","Link","BrowserRouter","Router","Switch","Redirect","Login","GuardedRoute","Menu","About","Config","CheckUserLogged","checkIfSignedIn","isUserSigned","sessionStorage","getItem","AuthedRoutes","props","Home","UnauthedRoutes","App","NotFound"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Route, Link, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport Login from './Login';\nimport GuardedRoute from 'react-guarded-route'\nimport Menu from './Menu'\nimport About from './About'\nimport Config from \"./Config.js\";\n\n// Scripts\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/popper.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n// Styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nconst CheckUserLogged = (checkIfSignedIn) => {\n  let isUserSigned = sessionStorage.getItem('userLoggedIn')\n  return checkIfSignedIn ? isUserSigned !== null : isUserSigned === null\n}\n\nconst AuthedRoutes = ({ ...props }) => {\n  return (\n    <div>\n      <div>\n        <Menu {...props} />\n        <GuardedRoute exact path='/' component={Home} validatorFunction={CheckUserLogged(true)} redirectTo='/login' />\n        <GuardedRoute path='/about' component={About} validatorFunction={CheckUserLogged(true)} redirectTo='/login' />\n        <GuardedRoute path='/config' component={Config} validatorFunction={CheckUserLogged(true)} redirectTo='/login' />\n      </div>\n    </div>\n  )\n}\n\nconst UnauthedRoutes = () => {\n  return (\n    <div>\n      {/* <Route exact path='/' render={() => <Redirect to='/login' />} /> */}\n      <GuardedRoute path='/login' component={Login} validatorFunction={CheckUserLogged(false)} redirectTo='/' />\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/(login)' component={UnauthedRoutes} />\n        <Route path='/' component={AuthedRoutes} />\n\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  )\n}\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>\n        Page Not Found ¯\\_(ツ)_/¯\n      </h1>\n    </div>\n  )\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}