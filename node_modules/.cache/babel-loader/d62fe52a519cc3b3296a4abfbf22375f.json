{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js\";\nimport Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.addSession = this.addSession.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this);\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: '',\n      sessions: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`).then(res => {\n      const sessions = res.data.Sessions;\n      const brochure = [];\n      this.setState({\n        sessions\n      });\n      this.state.sessions.map(session => {\n        var currentSession = Object.values(session)[0];\n        brochure.push({\n          SessionName: currentSession.Name,\n          SessionType: currentSession.Type,\n          Bandwidth: {\n            Rate: currentSession.Bandwidth.Rate\n          },\n          SyncDirectory: {\n            Path: currentSession.SyncDirectory.Path\n          }\n        });\n        return brochure;\n      });\n      this.setState({\n        brochure\n      });\n    });\n  }\n\n  replaceModalItem(index, modification) {\n    //console.log(modification);\n    this.setState(prevState => {\n      prevState.fields[name] = value;\n      return {\n        requiredItem: prevState.fields\n      };\n    });\n    this.setState({\n      requiredItem: index,\n      modification: modification\n    });\n    console.log(index);\n    console.log(modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {\n    let tmpChangedSessions = this.state.changedSessions;\n    tmpChangedSessions.push({\n      modification: modification,\n      session: session,\n      sessionNameChangedProps: sessionNameChangedProps\n    });\n    this.setState({\n      changedIndexes: tmpChangedSessions\n    });\n  }\n\n  saveModalDetails(item, modification) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    let currentName = tempbrochure[requiredItem].SessionName;\n    item.SessionType = tempbrochure[requiredItem].SessionType;\n    const sessionNameChanged = {\n      'sessionNameChanged': currentName !== item.SessionName,\n      'oldName': currentName\n    };\n    tempbrochure[requiredItem] = item;\n    this.storeChangedSession(item, modification, sessionNameChanged);\n    this.setState({\n      brochure: tempbrochure\n    });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    let tmpSessionName = tempBrochure[index].SessionName;\n    tempBrochure.splice(index, 1);\n    this.storeChangedSession(tmpSessionName, 'deleted');\n    this.setState({\n      brochure: tempBrochure\n    });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to filesystem...');\n    axios.post('https://localhost:1337/sessions', {\n      data: JSON.stringify(this.state.changedSessions)\n    }).then(res => {\n      console.log(res);\n    });\n    this.setState({\n      changedSessions: []\n    }); //this.state.changedSessions = []\n  }\n\n  addSession() {\n    this.state.brochure.push({\n      SessionName: '',\n      SessionType: '',\n      Bandwidth: {\n        Rate: ''\n      },\n      SyncDirectory: {\n        Path: ''\n      }\n    });\n    this.replaceModalItem(this.state.brochure.length - 1, 'added');\n  }\n\n  render() {\n    //console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.SessionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.SessionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.SyncDirectory.Path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.replaceModalItem(index, 'modified'),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              this.deleteItem(index);\n            },\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this);\n    });\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sessions configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => this.saveChangesToFile(),\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModal\",\n          onClick: () => {\n            this.addSession();\n          },\n          children: \"Add new session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Session Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Sync Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: brochure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), tmpModal ? /*#__PURE__*/_jsxDEV(Modal, {\n        SessionName: '',\n        SessionType: '',\n        SyncDirectory: '',\n        Bandwidth: '',\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this) : modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n        SessionName: modalData.SessionName,\n        SessionType: modalData.SessionType,\n        SyncDirectory: modalData.SyncDirectory,\n        Bandwidth: modalData.Bandwidth,\n        saveModalDetails: this.saveModalDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n} // render() {\n//   return (\n//     <ul>\n//       Hello\n//       {\n//         this.state.sessions.map(session => {\n//           console.log(Object.values(session)[0].Type)\n//         })\n//         // console.log(this.isJson(this.state.sessions))\n//         // this.state.sessions.forEach(session => {\n//         //   console.log(session)\n//         // })\n//       }\n//     </ul>\n//   )\n// }\n//}","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Home.js"],"names":["Modal","React","axios","Home","Component","constructor","props","replaceModalItem","bind","addSession","saveModalDetails","saveChangesToFile","state","requiredItem","brochure","changedSessions","modification","sessions","componentDidMount","get","then","res","data","Sessions","setState","map","session","currentSession","Object","values","push","SessionName","Name","SessionType","Type","Bandwidth","Rate","SyncDirectory","Path","index","prevState","fields","name","value","console","log","storeChangedSession","sessionNameChangedProps","tmpChangedSessions","changedIndexes","item","tempbrochure","currentName","sessionNameChanged","deleteItem","tempBrochure","tmpSessionName","splice","post","JSON","stringify","length","render","modalData","tmpModal","textAlign"],"mappings":"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","sourcesContent":["import Modal from './Modal.js';\nimport React from 'react';\nimport axios from 'axios';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.addSession = this.addSession.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.saveChangesToFile = this.saveChangesToFile.bind(this)\n    this.state = {\n      requiredItem: 0,\n      brochure: [],\n      changedSessions: [],\n      modification: '',\n      sessions: []\n    }\n  }\n  componentDidMount() {\n    axios.get(`https://localhost:1337/sessions`)\n      .then(res => {\n        const sessions = res.data.Sessions\n        const brochure = [];\n        this.setState({ sessions });\n        this.state.sessions.map(session => {\n          var currentSession = Object.values(session)[0]\n          \n          brochure.push({\n            SessionName: currentSession.Name,\n            SessionType: currentSession.Type,\n            Bandwidth: { Rate: currentSession.Bandwidth.Rate },\n            SyncDirectory: { Path: currentSession.SyncDirectory.Path }\n          })\n          return brochure\n        })\n        this.setState({ brochure });\n      })\n  }\n\n  replaceModalItem(index, modification) {\n    //console.log(modification);\n      this.setState(prevState => {\n        prevState.fields[name] =  value;\n        return {\n          requiredItem: prevState.fields\n        };\n    });\n    this.setState({\n      requiredItem: index,\n      modification: modification\n    });\n    console.log(index)\n    console.log(modification);\n  }\n\n  storeChangedSession(session, modification, sessionNameChangedProps) {\n    let tmpChangedSessions = this.state.changedSessions;\n    tmpChangedSessions.push({\n      modification: modification,\n      session: session,\n      sessionNameChangedProps: sessionNameChangedProps\n    })\n    this.setState({ changedIndexes: tmpChangedSessions });\n  }\n\n  saveModalDetails(item, modification) {\n    const requiredItem = this.state.requiredItem;\n    let tempbrochure = this.state.brochure;\n    let currentName = tempbrochure[requiredItem].SessionName;\n    item.SessionType = tempbrochure[requiredItem].SessionType;\n    const sessionNameChanged = {\n      'sessionNameChanged':\n        (currentName !== item.SessionName), 'oldName': currentName\n    }\n\n    tempbrochure[requiredItem] = item;\n\n    this.storeChangedSession(item, modification, sessionNameChanged);\n    this.setState({ brochure: tempbrochure });\n  }\n\n  deleteItem(index) {\n    let tempBrochure = this.state.brochure;\n    let tmpSessionName = tempBrochure[index].SessionName;\n    tempBrochure.splice(index, 1);\n\n    this.storeChangedSession(tmpSessionName, 'deleted')\n    this.setState({ brochure: tempBrochure });\n  }\n\n  saveChangesToFile() {\n    console.log('Saving changes to filesystem...')\n\n    axios.post('https://localhost:1337/sessions', {\n      data: JSON.stringify(this.state.changedSessions)\n    }).then(res => {\n      console.log(res);\n    })\n    this.setState({changedSessions: []})\n    //this.state.changedSessions = []\n  }\n\n  addSession() {\n    this.state.brochure.push({\n      SessionName: '',\n      SessionType: '',\n      Bandwidth: { Rate: '' },\n      SyncDirectory: { Path: '' }\n    });\n\n    this.replaceModalItem(this.state.brochure.length - 1, 'added');\n  }\n\n\n  render() {\n    //console.log('Rendering');\n    const brochure = this.state.brochure.map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>{item.SessionName}</td>\n          <td>{item.SessionType}</td>\n          <td>{item.SyncDirectory.Path}</td>\n          <td>\n            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n              onClick={() => this.replaceModalItem(index, 'modified')}>edit</button> {\" \"}\n            <button className=\"btn btn-danger\" onClick={() => {\n              this.deleteItem(index)\n            }\n            }>remove</button>\n          </td>\n        </tr>\n      )\n    });\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.brochure[requiredItem];\n    let tmpModal;\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Sessions configuration</h1>\n          <button className=\"btn btn-warning\"\n            onClick={() => this.saveChangesToFile()\n            }>Save changes</button> {\" \"}\n          <button className='btn btn-info' data-toggle=\"modal\" data-target=\"#exampleModal\"\n            onClick={() => {\n              this.addSession()\n            }}>Add new session</button> {\" \"}\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Session Name</th>\n              <th scope=\"col\">Session Type</th>\n              <th scope=\"col\">Sync Directory</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brochure}\n          </tbody>\n        </table>\n\n        {tmpModal ? <Modal\n          SessionName={''}\n          SessionType={''}\n          SyncDirectory={''}\n          Bandwidth={''}\n          saveModalDetails={this.saveModalDetails}\n        />\n          :\n          (modalData ? <Modal\n            SessionName={modalData.SessionName}\n            SessionType={modalData.SessionType}\n            SyncDirectory={modalData.SyncDirectory}\n            Bandwidth={modalData.Bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          /> : null)}\n\n        {/* { modalData ?\n          <Modal\n            SessionName={modalData.SessionName}\n            SessionType={modalData.SessionType}\n            SyncDirectory={modalData.SyncDirectory}\n            Bandwidth={modalData.Bandwidth}\n            saveModalDetails={this.saveModalDetails}\n          />\n          :\n          null} */}\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // render() {\n  //   return (\n  //     <ul>\n  //       Hello\n  //       {\n  //         this.state.sessions.map(session => {\n  //           console.log(Object.values(session)[0].Type)\n  //         })\n  //         // console.log(this.isJson(this.state.sessions))\n  //         // this.state.sessions.forEach(session => {\n  //         //   console.log(session)\n  //         // })\n  //       }\n  //     </ul>\n  //   )\n  // }\n//}\n\n"]},"metadata":{},"sourceType":"module"}