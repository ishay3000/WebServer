{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/Config.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { forwardRef } from 'react'; // //JSON data from RESTful API\n\nvar user = {\n  \"user\": {\n    \"id\": 2,\n    \"email\": \"janet.weaver@reqres.in\",\n    \"first_name\": \"Janet\",\n    \"last_name\": \"Weaver\"\n  }\n};\nvar columns = [{\n  title: \"id\",\n  field: \"id\",\n  hidden: true\n}, {\n  title: \"First name\",\n  field: \"first_name\"\n}, {\n  title: \"Last name\",\n  field: \"last_name\"\n}, {\n  title: \"email\",\n  field: \"email\"\n}];\nconst tableIcons = {\n  Add: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(AddBox, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 37\n  }, this)),\n  Check: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Check, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 39\n  }, this)),\n  Clear: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Clear, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 39\n  }, this)),\n  Delete: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(DeleteOutline, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 40\n  }, this)),\n  DetailPanel: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronRight, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 45\n  }, this)),\n  Edit: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Edit, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 38\n  }, this)),\n  Export: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(SaveAlt, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 40\n  }, this)),\n  Filter: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(FilterList, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 40\n  }, this)),\n  FirstPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(FirstPage, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 43\n  }, this)),\n  LastPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(LastPage, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 42\n  }, this)),\n  NextPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronRight, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 42\n  }, this)),\n  PreviousPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronLeft, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 46\n  }, this)),\n  ResetSearch: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Clear, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 45\n  }, this)),\n  Search: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Search, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 40\n  }, this)),\n  SortArrow: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ArrowDownward, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 43\n  }, this)),\n  ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Remove, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 49\n  }, this)),\n  ViewColumn: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ViewColumn, { ...props,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 44\n  }, this))\n};\nexport default function Config() {\n  _s();\n\n  const [data, setData] = useState([]); //table data\n\n  useEffect(() => {\n    setData(user.data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"User list from API\",\n      columns: columns,\n      data: data,\n      icons: tableIcons,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          handleRowUpdate(newData, oldData, resolve);\n        }),\n        onRowAdd: newData => new Promise(resolve => {\n          handleRowAdd(newData, resolve);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          handleRowDelete(oldData, resolve);\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Config, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Config;\n\nconst handleRowAdd = (newData, resolve) => {\n  // //validation\n  let errorList = []; // if (newData.first_name === undefined) {\n  //     errorList.push(\"Please enter first name\")\n  // }\n  // if (newData.last_name === undefined) {\n  //     errorList.push(\"Please enter last name\")\n  // }\n  // if (newData.email === undefined || validateEmail(newData.email) === false) {\n  //     errorList.push(\"Please enter a valid email\")\n  // }\n\n  if (errorList.length < 1) {//no error\n    // api.post(\"/users\", newData)\n    //     .then(res => {\n    //         let dataToAdd = [...data];\n    //         dataToAdd.push(newData);\n    //         setData(dataToAdd);\n    //         resolve()\n    //         // setErrorMessages([])\n    //         // setIserror(false)\n    //     })\n    //     .catch(error => {\n    //         // setErrorMessages([\"Cannot add data. Server error!\"])\n    //         // setIserror(true)\n    //         resolve()\n    //     })\n  } else {\n    // setErrorMessages(errorList)\n    // setIserror(true)\n    resolve();\n  }\n};\n\nconst handleRowUpdate = (newData, oldData, resolve) => {// //validation\n  // if (errorList.length < 1) {\n  //     api.patch(\"/users/\" + newData.id, newData)\n  //         .then(res => {\n  //             const dataUpdate = [...data];\n  //             const index = oldData.tableData.id;\n  //             dataUpdate[index] = newData;\n  //             setData([...dataUpdate]);\n  //             resolve()\n  //             setIserror(false)\n  //             setErrorMessages([])\n  //         })\n  //         .catch(error => {\n  //             setErrorMessages([\"Update failed! Server error\"])\n  //             setIserror(true)\n  //             resolve()\n  //         })\n  // } else {\n  //     setErrorMessages(errorList)\n  //     setIserror(true)\n  //     resolve()\n  // }\n};\n\nconst handleRowDelete = (oldData, resolve) => {// api.delete(\"/users/\" + oldData.id)\n  //     .then(res => {\n  //         const dataDelete = [...data];\n  //         const index = oldData.tableData.id;\n  //         dataDelete.splice(index, 1);\n  //         setData([...dataDelete]);\n  //         resolve()\n  //     })\n  //     .catch(error => {\n  //         setErrorMessages([\"Delete failed! Server error\"])\n  //         setIserror(true)\n  //         resolve()\n  //     })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Config\");","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/Config.js"],"names":["React","useEffect","useState","Axios","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","forwardRef","user","columns","title","field","hidden","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","Config","data","setData","onRowUpdate","newData","oldData","Promise","resolve","handleRowUpdate","onRowAdd","handleRowAdd","onRowDelete","handleRowDelete","errorList","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Axios from 'axios';\nimport MaterialTable from 'material-table'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { forwardRef } from 'react';\n\n\n// //JSON data from RESTful API\nvar user = {\n    \"user\":\n    {\n        \"id\": 2,\n        \"email\": \"janet.weaver@reqres.in\",\n        \"first_name\": \"Janet\",\n        \"last_name\": \"Weaver\",\n    }\n}\n\nvar columns = [\n    { title: \"id\", field: \"id\", hidden: true },\n    { title: \"First name\", field: \"first_name\" },\n    { title: \"Last name\", field: \"last_name\" },\n    { title: \"email\", field: \"email\" }\n]\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nexport default function Config() {\n    const [data, setData] = useState([]); //table data\n\n    useEffect(() => {\n        setData(user.data)\n    })\n\n    return (\n        <div className='App'>\n            <MaterialTable\n                title=\"User list from API\"\n                columns={columns}\n                data={data}\n                icons={tableIcons}\n                editable={{\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                            handleRowUpdate(newData, oldData, resolve);\n                        }),\n                    onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                            handleRowAdd(newData, resolve)\n                        }),\n                    onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            handleRowDelete(oldData, resolve)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nconst handleRowAdd = (newData, resolve) => {\n    // //validation\n    let errorList = []\n    // if (newData.first_name === undefined) {\n    //     errorList.push(\"Please enter first name\")\n    // }\n    // if (newData.last_name === undefined) {\n    //     errorList.push(\"Please enter last name\")\n    // }\n    // if (newData.email === undefined || validateEmail(newData.email) === false) {\n    //     errorList.push(\"Please enter a valid email\")\n    // }\n    if (errorList.length < 1) { //no error\n        \n        // api.post(\"/users\", newData)\n        //     .then(res => {\n        //         let dataToAdd = [...data];\n        //         dataToAdd.push(newData);\n        //         setData(dataToAdd);\n        //         resolve()\n        //         // setErrorMessages([])\n        //         // setIserror(false)\n        //     })\n        //     .catch(error => {\n        //         // setErrorMessages([\"Cannot add data. Server error!\"])\n        //         // setIserror(true)\n        //         resolve()\n        //     })\n    } else {\n        // setErrorMessages(errorList)\n        // setIserror(true)\n        resolve()\n    }\n}\n\nconst handleRowUpdate = (newData, oldData, resolve) => {\n    // //validation\n    // if (errorList.length < 1) {\n    //     api.patch(\"/users/\" + newData.id, newData)\n    //         .then(res => {\n    //             const dataUpdate = [...data];\n    //             const index = oldData.tableData.id;\n    //             dataUpdate[index] = newData;\n    //             setData([...dataUpdate]);\n    //             resolve()\n    //             setIserror(false)\n    //             setErrorMessages([])\n    //         })\n    //         .catch(error => {\n    //             setErrorMessages([\"Update failed! Server error\"])\n    //             setIserror(true)\n    //             resolve()\n    //         })\n    // } else {\n    //     setErrorMessages(errorList)\n    //     setIserror(true)\n    //     resolve()\n    // }\n}\n\nconst handleRowDelete = (oldData, resolve) => {\n    // api.delete(\"/users/\" + oldData.id)\n    //     .then(res => {\n    //         const dataDelete = [...data];\n    //         const index = oldData.tableData.id;\n    //         dataDelete.splice(index, 1);\n    //         setData([...dataDelete]);\n    //         resolve()\n    //     })\n    //     .catch(error => {\n    //         setErrorMessages([\"Delete failed! Server error\"])\n    //         setIserror(true)\n    //         resolve()\n    //     })\n}"]},"metadata":{},"sourceType":"module"}