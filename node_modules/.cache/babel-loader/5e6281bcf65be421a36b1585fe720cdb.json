{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Route, Link, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport Login from './Login';\nimport GuardedRoute from 'react-guarded-route';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Menu from './Menu';\n\nconst IsUserLogged = checkIfSignedIn => {\n  let isUserSigned = sessionStorage.getItem('userLoggedIn');\n  return checkIfSignedIn ? isUserSigned !== null : isUserSigned === null;\n}; // const UnauthenticatedRoutes = () => {\n//   return (\n//     <Switch>\n//       <Route path='/login' component={Login} />\n//       <Redirect to={'/notfound'} />\n//     </Switch>\n//   )\n// }\n// const AuthenticatedRoutes = () => {\n//   return (\n//     <Switch>\n//       <Route exact path='/' component={Home} />\n//       <Route path='/about' component={About} />\n//       <Redirect to={'/notfound'} />\n//     </Switch>\n//   )\n// }\n// function App() {\n//   return (\n//     <Router>\n//       {IsUserLogged(true) ? AuthenticatedRoutes() : UnauthenticatedRoutes()}\n//     </Router>\n//   );\n// }\n\n\n_c = IsUserLogged;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(GuardedRoute, {\n        exact: true,\n        path: \"/\",\n        component: Home,\n        validatorFunction: IsUserLogged(true),\n        redirectTo: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuardedRoute, {\n        path: \"/about\",\n        component: About,\n        validatorFunction: IsUserLogged(true),\n        redirectTo: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuardedRoute, {\n        path: \"/login\",\n        component: Login,\n        validatorFunction: IsUserLogged(false),\n        redirectTo: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/notfound'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\n\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = About;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Home;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"IsUserLogged\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"About\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/App.js"],"names":["React","useState","Route","Link","BrowserRouter","Router","Switch","Redirect","Login","GuardedRoute","Navbar","Nav","Menu","IsUserLogged","checkIfSignedIn","isUserSigned","sessionStorage","getItem","App","Home","About"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,aAAa,IAAIC,MAAvC,EAA+CC,MAA/C,EAAuDC,QAAvD,QAAuE,kBAAvE;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,YAAY,GAAIC,eAAD,IAAqB;AACxC,MAAIC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAnB;AACA,SAAOH,eAAe,GAAGC,YAAY,KAAK,IAApB,GAA2BA,YAAY,KAAK,IAAlE;AACD,CAHD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA9BMF,Y;;AAgCN,SAASK,GAAT,GAAe;AACb,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAoB,QAAA,IAAI,EAAC,GAAzB;AAA6B,QAAA,SAAS,EAAEC,IAAxC;AAA8C,QAAA,iBAAiB,EAAEN,YAAY,CAAC,IAAD,CAA7E;AAAqF,QAAA,UAAU,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAEO,KAAvC;AAA8C,QAAA,iBAAiB,EAAEP,YAAY,CAAC,IAAD,CAA7E;AAAqF,QAAA,UAAU,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAEL,KAAvC;AAA8C,QAAA,iBAAiB,EAAEK,YAAY,CAAC,KAAD,CAA7E;AAAsF,QAAA,UAAU,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;MAZQK,G;;AAcT,SAASE,KAAT,GAAiB;AACf,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,K;;AAQT,SAASD,IAAT,GAAgB;AACd,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,I;AAQT,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Route, Link, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport Login from './Login';\nimport GuardedRoute from 'react-guarded-route'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport Menu from './Menu'\n\n\nconst IsUserLogged = (checkIfSignedIn) => {\n  let isUserSigned = sessionStorage.getItem('userLoggedIn')\n  return checkIfSignedIn ? isUserSigned !== null : isUserSigned === null\n}\n\n// const UnauthenticatedRoutes = () => {\n//   return (\n//     <Switch>\n//       <Route path='/login' component={Login} />\n//       <Redirect to={'/notfound'} />\n//     </Switch>\n//   )\n// }\n\n// const AuthenticatedRoutes = () => {\n//   return (\n//     <Switch>\n//       <Route exact path='/' component={Home} />\n//       <Route path='/about' component={About} />\n//       <Redirect to={'/notfound'} />\n//     </Switch>\n//   )\n// }\n\n// function App() {\n//   return (\n//     <Router>\n//       {IsUserLogged(true) ? AuthenticatedRoutes() : UnauthenticatedRoutes()}\n//     </Router>\n//   );\n// }\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <GuardedRoute exact path='/' component={Home} validatorFunction={IsUserLogged(true)} redirectTo='/login' />\n        <GuardedRoute path='/about' component={About} validatorFunction={IsUserLogged(true)} redirectTo='/login' />\n        <GuardedRoute path='/login' component={Login} validatorFunction={IsUserLogged(false)} redirectTo='/login' />\n\n        <Redirect to={'/notfound'} />\n      </Switch>\n    </Router>\n  )\n}\n\nfunction About() {\n  return (\n    <div>\n      <h1>About</h1>\n    </div>\n  )\n}\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}