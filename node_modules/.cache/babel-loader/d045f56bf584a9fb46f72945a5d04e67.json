{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/toor/Desktop/Ishay/ReactApps/client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport GuardedRoute from 'react-guarded-route';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Menu from './Menu';\n\nconst IsUserLogged = checkIfSignedIn => {\n  let isUserSigned = sessionStorage.getItem('userLoggedIn');\n  return checkIfSignedIn ? isUserSigned !== null : isUserSigned === null;\n};\n\n_c = IsUserLogged;\n\nconst UnauthenticatedRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(GuardedRoute, {\n      path: \"/login\",\n      validatorFunction: IsUserLogged(false),\n      component: Login,\n      redirectTo: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = UnauthenticatedRoutes;\n\nconst AuthenticatedRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(GuardedRoute, {\n      exact: true,\n      path: \"/\",\n      validatorFunction: IsUserLogged(true),\n      component: Home,\n      redirectTo: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GuardedRoute, {\n      path: \"/about\",\n      about: true,\n      validatorFunction: IsUserLogged(true),\n      component: About,\n      redirectTo: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = AuthenticatedRoutes;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: IsUserLogged(true) ? AuthenticatedRoutes() : UnauthenticatedRoutes()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\n\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = About;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = Home;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"IsUserLogged\");\n$RefreshReg$(_c2, \"UnauthenticatedRoutes\");\n$RefreshReg$(_c3, \"AuthenticatedRoutes\");\n$RefreshReg$(_c4, \"App\");\n$RefreshReg$(_c5, \"About\");\n$RefreshReg$(_c6, \"Home\");","map":{"version":3,"sources":["/home/toor/Desktop/Ishay/ReactApps/client/src/App.js"],"names":["React","useState","Route","Link","BrowserRouter","Router","Switch","Login","GuardedRoute","Navbar","Nav","Menu","IsUserLogged","checkIfSignedIn","isUserSigned","sessionStorage","getItem","UnauthenticatedRoutes","AuthenticatedRoutes","Home","About","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,aAAa,IAAIC,MAAvC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,YAAY,GAAIC,eAAD,IAAqB;AACxC,MAAIC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAnB;AACA,SAAOH,eAAe,GAAGC,YAAY,KAAK,IAApB,GAA2BA,YAAY,KAAK,IAAlE;AACD,CAHD;;KAAMF,Y;;AAKN,MAAMK,qBAAqB,GAAG,MAAM;AAClC,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,iBAAiB,EAAEL,YAAY,CAAC,KAAD,CAA3D;AAAoE,MAAA,SAAS,EAAEL,KAA/E;AAAsF,MAAA,UAAU,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMU,qB;;AAQN,MAAMC,mBAAmB,GAAG,MAAM;AAChC,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAA6B,MAAA,iBAAiB,EAAEN,YAAY,CAAC,IAAD,CAA5D;AAAoE,MAAA,SAAS,EAAEO,IAA/E;AAAqF,MAAA,UAAU,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,KAAK,MAAjC;AAAkC,MAAA,iBAAiB,EAAEP,YAAY,CAAC,IAAD,CAAjE;AAAyE,MAAA,SAAS,EAAEQ,KAApF;AAA2F,MAAA,UAAU,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMF,mB;;AASN,SAASG,GAAT,GAAe;AACb,sBACE,QAAC,MAAD;AAAA,cACKT,YAAY,CAAC,IAAD,CAAZ,GAAqBM,mBAAmB,EAAxC,GAA6CD,qBAAqB;AADvE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQI,G;;AAQT,SAASD,KAAT,GAAiB;AACf,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,K;;AAQT,SAASD,IAAT,GAAgB;AACd,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,I;AAQT,eAAeE,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport Login from './Login';\nimport GuardedRoute from 'react-guarded-route'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport Menu from './Menu'\n\n\nconst IsUserLogged = (checkIfSignedIn) => {\n  let isUserSigned = sessionStorage.getItem('userLoggedIn')\n  return checkIfSignedIn ? isUserSigned !== null : isUserSigned === null\n}\n\nconst UnauthenticatedRoutes = () => {\n  return (\n    <Switch>\n      <GuardedRoute path='/login' validatorFunction={IsUserLogged(false)} component={Login} redirectTo='/' />\n    </Switch>\n  )\n}\n\nconst AuthenticatedRoutes = () => {\n  return (\n    <Switch>\n      <GuardedRoute exact path='/' validatorFunction={IsUserLogged(true)} component={Home} redirectTo='/login' />\n      <GuardedRoute path='/about' about validatorFunction={IsUserLogged(true)} component={About} redirectTo='/login' />\n    </Switch>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n        {IsUserLogged(true) ? AuthenticatedRoutes() : UnauthenticatedRoutes() }\n    </Router>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h1>About</h1>\n    </div>\n  )\n}\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}